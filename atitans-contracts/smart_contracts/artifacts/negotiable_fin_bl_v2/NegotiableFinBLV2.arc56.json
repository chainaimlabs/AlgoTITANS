{
    "name": "NegotiableFinBLV2",
    "structs": {},
    "methods": [
        {
            "name": "hello",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Test method (exact V1 compatibility)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "createEnhancedFinancialBL",
            "args": [
                {
                    "type": "string",
                    "name": "description"
                },
                {
                    "type": "uint64",
                    "name": "cargoValue"
                },
                {
                    "type": "uint64",
                    "name": "blType"
                },
                {
                    "type": "uint64",
                    "name": "creditRating"
                },
                {
                    "type": "uint64",
                    "name": "riskScore"
                },
                {
                    "type": "uint64",
                    "name": "yieldRate"
                },
                {
                    "type": "string",
                    "name": "vleiID"
                },
                {
                    "type": "string",
                    "name": "jurisdictionCode"
                },
                {
                    "type": "string",
                    "name": "complianceHash"
                },
                {
                    "type": "string",
                    "name": "incoterms"
                },
                {
                    "type": "string",
                    "name": "insurancePolicyID"
                },
                {
                    "type": "string",
                    "name": "lcrReference"
                },
                {
                    "type": "uint64",
                    "name": "totalShares"
                },
                {
                    "type": "uint64",
                    "name": "minInvestment"
                },
                {
                    "type": "string",
                    "name": "dcsaVersion"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Enhanced Financial BL Creation (builds on V1 createFinancialBL)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getEnhancedBLInfo",
            "args": [
                {
                    "type": "uint64",
                    "name": "blId"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Enhanced BL information retrieval (builds on V1 getBLFinancialInfo)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fractionalizeForTrading",
            "args": [
                {
                    "type": "uint64",
                    "name": "blId"
                },
                {
                    "type": "uint64",
                    "name": "sharesToSell"
                },
                {
                    "type": "uint64",
                    "name": "pricePerShare"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Fractionalization for MSME access (RWA innovation - simple implementation)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "calculateEnhancedYield",
            "args": [
                {
                    "type": "uint64",
                    "name": "blId"
                },
                {
                    "type": "uint64",
                    "name": "investmentAmount"
                },
                {
                    "type": "uint64",
                    "name": "riskAdjustment"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Enhanced yield calculation with risk factors (builds on V1 calculateYield)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verifyEnhancedCompliance",
            "args": [
                {
                    "type": "uint64",
                    "name": "blId"
                },
                {
                    "type": "string",
                    "name": "vleiProof"
                },
                {
                    "type": "string",
                    "name": "dcsaHash"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Enhanced compliance verification with vLEI (RWA innovation)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "initiateCrossBorderSettlement",
            "args": [
                {
                    "type": "uint64",
                    "name": "blId"
                },
                {
                    "type": "uint64",
                    "name": "stablecoinAssetId"
                },
                {
                    "type": "uint64",
                    "name": "amount"
                },
                {
                    "type": "string",
                    "name": "targetCurrency"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Cross-border settlement support (RWA innovation)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getEnhancedCounters",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Enhanced counter information (builds on V1 getCounters)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "setMarketplaceContract",
            "args": [
                {
                    "type": "string",
                    "name": "marketplaceAddress"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Set marketplace contract for atomic settlement (RWA innovation)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getUserPortfolio",
            "args": [
                {
                    "type": "string",
                    "name": "userAddress"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "User portfolio information (RWA innovation - simple implementation)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "generateAuditTrail",
            "args": [
                {
                    "type": "uint64",
                    "name": "blId"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Regulatory audit trail (RWA innovation)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getBLFinancialInfo",
            "args": [
                {
                    "type": "string",
                    "name": "blId"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "V1 compatibility methods - exactly like V1",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verifyCompliance",
            "args": [
                {
                    "type": "string",
                    "name": "blId"
                },
                {
                    "type": "string",
                    "name": "regulatoryHash"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "tokenizeForTrading",
            "args": [
                {
                    "type": "string",
                    "name": "blId"
                },
                {
                    "type": "uint64",
                    "name": "fractionalShares"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "calculateYield",
            "args": [
                {
                    "type": "string",
                    "name": "blId"
                },
                {
                    "type": "uint64",
                    "name": "investmentAmount"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getCounters",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 4,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "blCounter": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YmxDb3VudGVy"
                },
                "totalValueLocked": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dG90YWxWYWx1ZUxvY2tlZA=="
                },
                "totalBLsActive": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dG90YWxCTHNBY3RpdmU="
                },
                "totalYieldGenerated": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dG90YWxZaWVsZEdlbmVyYXRlZA=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        187,
                        259,
                        286,
                        320,
                        356,
                        386,
                        461,
                        533,
                        613,
                        693,
                        775,
                        852,
                        881,
                        955,
                        1045,
                        1138
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        1173
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        190,
                        262,
                        289,
                        323,
                        359,
                        389,
                        464,
                        536,
                        616,
                        696,
                        778,
                        855,
                        884,
                        958,
                        1048,
                        1141
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        1253,
                        1262,
                        1266,
                        1276
                    ],
                    "errorMessage": "check GlobalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAQAmBQQVH3x1CWJsQ291bnRlchB0b3RhbFZhbHVlTG9ja2VkDnRvdGFsQkxzQWN0aXZlA0JMIDEbQQROghAEAr7OEQRNaIqNBOzKj0AEMBihtAQPeyxYBMsqVZYE6IoY1wRT7dZmBL3O7pcE+wtOYwRr6essBJvQExAEBLMT3ATxuUCpBOm67CsEBJT5DzYaAI4QA7kDXAMCArgCmwJOAfwBrAFcARQAyQCrAIcAZQBKAAIjQzEZFEQxGESAPBUffHUANkVuaGFuY2VkIGNvdW50ZXJzIGF2YWlsYWJsZSB3aXRoIGFkZGl0aW9uYWwgVjIgbWV0cmljc7AiQzEZFEQxGEQ2GgFXAgA2GgIXiASEFihMULAiQzEZFEQxGEQ2GgFXAgA2GgIXiAQ7SRUWVwYCTFAoTFCwIkMxGRREMRhENhoBVwIANhoCVwIAiAPuSRUWVwYCTFAoTFCwIkMxGRREMRhENhoBVwIAiAObSRUWVwYCTFAoTFCwIkMxGRREMRhEgD8VH3x1ADlBdWRpdCBUcmFpbDogSW1tdXRhYmxlIGNvbXBsaWFuY2UgcmVjb3JkIGdlbmVyYXRlZCBmb3IgQkywIkMxGRREMRhEgDwVH3x1ADZVc2VyIFBvcnRmb2xpbyBkYXRhIGF2YWlsYWJsZSBmb3IgZW5oYW5jZWQgQkwgdHJhY2tpbmewIkMxGRREMRhEgEQVH3x1AD5NYXJrZXRwbGFjZSBjb250cmFjdCBsaW5rZWQgZm9yIGF0b21pYyBzZXR0bGVtZW50IGNhcGFiaWxpdGllc7AiQzEZFEQxGESARBUffHUAPkVuaGFuY2VkIENvdW50ZXJzIGF2YWlsYWJsZSB3aXRoIEJMIGNvdW50LCBUVkwsIGFuZCBhY3RpdmUgQkxzsCJDMRkURDEYRIBGFR98dQBAQ3Jvc3MtYm9yZGVyIHNldHRsZW1lbnQgaW5pdGlhdGVkIGZvciBCTCB3aXRoIHN0YWJsZWNvaW4gc3VwcG9ydLAiQzEZFEQxGESAQRUffHUAO0JMIGNvbXBsaWFuY2UgdmVyaWZpZWQ6IHZMRUkgKyBEQ1NBIDMuMCB2YWxpZGF0aW9uIGNvbXBsZXRlsCJDMRkURDEYRDYaARc2GgIXNhoDF4gBnBYoTFCwIkMxGRREMRhEgD4VH3x1ADhCTCBmcmFjdGlvbmFsaXplZCB3aXRoIHNoYXJlcyBhdmFpbGFibGUgZm9yIE1TTUUgdHJhZGluZ7AiQzEZFEQxGESAThUffHUASEVuaGFuY2VkIEZpbkJMOiBBZHZhbmNlZCBmaW5hbmNpYWwgaW5mbyB3aXRoIGZyYWN0aW9uYWxpemF0aW9uIGF2YWlsYWJsZbAiQzEZFEQxGEQ2GgFXAgA2GgIXNhoDFzYaBBc2GgUXNhoGFzYaB1cCADYaCFcCADYaCVcCADYaClcCADYaC1cCADYaDFcCADYaDRc2Gg4XNhoPVwIAiABWFihMULAiQzEZFEQxGEQ2GgFXAgCIABlJFRZXBgJMUChMULAiQzEZQPwkMRgURCJDigEBgB1IZWxsbyBmcm9tIEZpbkJMVjIgRW5oYW5jZWQsIIv/UImKDwEjKWVFAUAAAykjZyMqZUUBQAADKiNnIytlRQFAAAMrI2cjKWVEIggpTGcjKWVEIyplRIvyCCpMZyMrZUQiCCtMZ4mKAwGL/oEUComKAQGABkZpbkJMIIv/UIAjOiBFbmhhbmNlZCBmaW5hbmNpYWwgaW5mbyBhdmFpbGFibGVQiYoCAScEi/5QgB0gZW5oYW5jZWQgY29tcGxpYW5jZSB2ZXJpZmllZFCJigIBJwSL/lCAIiBlbmhhbmNlZCB0b2tlbml6YXRpb24gZm9yIHRyYWRpbmdQiYoCAYv/gREKiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}