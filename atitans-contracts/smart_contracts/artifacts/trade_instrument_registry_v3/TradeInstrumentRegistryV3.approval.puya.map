{
  "version": 3,
  "sources": [
    "C:/SATHYA/CHAINAIM3003/mcp-servers/altry/atry2/atitans1/projects/atitans1-contracts/smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;AAAA;;AAgLG;;AAAA;AAAA;AAAA;;AAAA;AAhLH;;;AAAA;AAAA;;;AAAA;AAgLG;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAZA;;AAAA;AAAA;AAAA;;AAAA;AApKH;;;AAoKG;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AA3JH;;;AAAA;AA2JG;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhCA;;AAAA;AAAA;AAAA;;AAAA;AA3HH;;;AAAA;AAAA;;;AA2HG;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA9FA;;AAAA;AAAA;AAAA;;AAAA;AA7BH;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AA6BG;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhBH;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAkBe;;AAAkB;;AAAtB;AAAP;AARK;AAUyB;AAA9B;AATK;AAUyB;AAA9B;AAEO;AAAP;AAMF;;;;;;AAnBO;AAAA;AAAA;AAAA;AA8BL;;;AA9BK;AA+B2B;AAA9B;AA9BG;AA+B2B;AAA9B;AAhCG;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAsCe;;;;;;;;;;;;;;;;;AAKN;;;AADH;;;AADG;;;;AADC;;;;AAFK;;;;AAUX;;;AAVW;;;AAepB;AAIiB;;;;;;;;;;AAJjB;;;AAKS;;;AALT;AAWoB;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACC;AAAA;AACgB;;AAAxB;AAC2B;;AAAkB;;;;;AAAzB;AAAjB;AACH;;AAAA;AAIO;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAEN;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACK;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAGkB;;AAAxB;AAC0B;;AAAxB;AAhBI;;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAaN;;;;;;;;;;AAbM;AAcC;;;;;;;;;;AAdD;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoBnB;AAAA;AAAA;AAAA;;AAzFgE;AAAA;AAAA;AAyFhE;AAAA;;AAAA;AAAA;AAxF8F;;AAAA;;AAAA;AAAA;AAAA;;AAwGhD;AAAA;;AAA9C;;;AACgE;;AAAA;AAAA;AAAA;AAC9D;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;;AAAA;;AAAA;AAb4B;;AAAA;AAAe;AAAf;AAzFzB;AAyFL;AAAA;AAxFK;AAAA;AAAA;AAAA;AAyFuD;AAA9B;AAzFzB;AAyFL;AAAA;AAEA;;AAAA;AAaE;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;;;;AAOJ;;;AAES;;AAAA;AAzHyD;AAAA;AAAA;AAyH1B;AAAA;AAAA;;AAAtC;AAEkD;AAAA;AAAA;AAGhC;AAAA;;;AAA4B;;AAAvC;AAAP;AAGA;;AAAA;;AACiD;;AAAxB;AAAzB;;AAEA;;AAAA;;AAAA;AAAA;;AAAA;AAG+B;;AAAkB;AACjD;AAIiB;;;;;;;;;AAJjB;;;AAKS;;;AALT;AASO;AAAP;AAMF;;;AAES;;AAAA;AAzJyD;AAAA;AAAA;AAyJ1B;AAAA;AAAA;;AAAtC;AACsC;AAAA;AAAtC;AAMF;;;AA/JgG;;AAAA;;AAAA;AAAA;AAiKhD;AAAA;;AAA9C;;;AACmD;;AAAA;AAAA;AAAjD;AAAA;AAGK;;;;AAAP;AAAA;AAMF;;;AAES;;AAAA;AA9KyD;AAAA;AAAA;AA8K1B;AAAA;AAAA;;AAAtC;AAEkD;AAAA;AAAA;AAGhC;AAAA;;;AAA4B;;AAAvC;AAAP;AAE8B;;AAAA;AAA9B;;AACiD;;AAAxB;AAAzB;;AAEA;;AAAA;;AAAA;AAEO;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 4 8"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 \"nextInstrumentId\" \"totalInstruments\" \"instruments\" 0x00 \"eBL\" \"exp_inst\""
    },
    "75": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "77": {
      "op": "bz main_bare_routing@11",
      "stack_out": []
    },
    "80": {
      "op": "pushbytess 0xc3b145ab 0xeba5142d 0xe82910e1 0x993b46b8 0x752465a0 0xb1105ea1 // method \"initialize()bool\", method \"createInstrument(string,address,address,string,uint64,string,string)uint64\", method \"endorseInstrument(uint64,address)bool\", method \"getInstrument(uint64)(string,uint64,uint64,uint64,uint64,address,address,address,string,uint64,string,string,uint64,uint64,uint64,uint64)\", method \"getExporterInstruments(address)uint64[]\", method \"updateInstrumentStatus(uint64,uint64)bool\"",
      "defined_out": [
        "Method(createInstrument(string,address,address,string,uint64,string,string)uint64)",
        "Method(endorseInstrument(uint64,address)bool)",
        "Method(getExporterInstruments(address)uint64[])",
        "Method(getInstrument(uint64)(string,uint64,uint64,uint64,uint64,address,address,address,string,uint64,string,string,uint64,uint64,uint64,uint64))",
        "Method(initialize()bool)",
        "Method(updateInstrumentStatus(uint64,uint64)bool)"
      ],
      "stack_out": [
        "Method(initialize()bool)",
        "Method(createInstrument(string,address,address,string,uint64,string,string)uint64)",
        "Method(endorseInstrument(uint64,address)bool)",
        "Method(getInstrument(uint64)(string,uint64,uint64,uint64,uint64,address,address,address,string,uint64,string,string,uint64,uint64,uint64,uint64))",
        "Method(getExporterInstruments(address)uint64[])",
        "Method(updateInstrumentStatus(uint64,uint64)bool)"
      ]
    },
    "112": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(createInstrument(string,address,address,string,uint64,string,string)uint64)",
        "Method(endorseInstrument(uint64,address)bool)",
        "Method(getExporterInstruments(address)uint64[])",
        "Method(getInstrument(uint64)(string,uint64,uint64,uint64,uint64,address,address,address,string,uint64,string,string,uint64,uint64,uint64,uint64))",
        "Method(initialize()bool)",
        "Method(updateInstrumentStatus(uint64,uint64)bool)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(initialize()bool)",
        "Method(createInstrument(string,address,address,string,uint64,string,string)uint64)",
        "Method(endorseInstrument(uint64,address)bool)",
        "Method(getInstrument(uint64)(string,uint64,uint64,uint64,uint64,address,address,address,string,uint64,string,string,uint64,uint64,uint64,uint64))",
        "Method(getExporterInstruments(address)uint64[])",
        "Method(updateInstrumentStatus(uint64,uint64)bool)",
        "tmp%2#0"
      ]
    },
    "115": {
      "op": "match main_initialize_route@3 main_createInstrument_route@4 main_endorseInstrument_route@5 main_getInstrument_route@6 main_getExporterInstruments_route@7 main_updateInstrumentStatus_route@8",
      "stack_out": []
    },
    "129": {
      "block": "main_after_if_else@15",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "130": {
      "op": "return",
      "stack_out": []
    },
    "131": {
      "block": "main_updateInstrumentStatus_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "133": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "134": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "135": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "137": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "138": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "141": {
      "op": "btoi",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "142": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%4#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "145": {
      "op": "btoi",
      "defined_out": [
        "tmp%45#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%45#0",
        "tmp%46#0"
      ]
    },
    "146": {
      "callsub": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.updateInstrumentStatus",
      "op": "callsub updateInstrumentStatus",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "149": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "0x00"
      ]
    },
    "151": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "0x00",
        "0"
      ]
    },
    "152": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%3#0"
      ]
    },
    "154": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0"
      ],
      "stack_out": [
        "encoded_bool%2#0"
      ]
    },
    "155": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%2#0"
      ],
      "stack_out": [
        "encoded_bool%2#0",
        "0x151f7c75"
      ]
    },
    "156": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%2#0"
      ]
    },
    "157": {
      "op": "concat",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "158": {
      "op": "log",
      "stack_out": []
    },
    "159": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "160": {
      "op": "return",
      "stack_out": []
    },
    "161": {
      "block": "main_getExporterInstruments_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "163": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "164": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "165": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "167": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "168": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "171": {
      "callsub": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.getExporterInstruments",
      "op": "callsub getExporterInstruments",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "174": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0",
        "0x151f7c75"
      ]
    },
    "175": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%39#0"
      ]
    },
    "176": {
      "op": "concat",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "177": {
      "op": "log",
      "stack_out": []
    },
    "178": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "179": {
      "op": "return",
      "stack_out": []
    },
    "180": {
      "block": "main_getInstrument_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "182": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "183": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "184": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "186": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "187": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "190": {
      "op": "btoi",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "191": {
      "callsub": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.getInstrument",
      "op": "callsub getInstrument",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "194": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "0x151f7c75"
      ]
    },
    "195": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%33#0"
      ]
    },
    "196": {
      "op": "concat",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "197": {
      "op": "log",
      "stack_out": []
    },
    "198": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "199": {
      "op": "return",
      "stack_out": []
    },
    "200": {
      "block": "main_endorseInstrument_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "202": {
      "op": "!",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "203": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "204": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "206": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "207": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "210": {
      "op": "btoi",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "211": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "214": {
      "callsub": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.endorseInstrument",
      "op": "callsub endorseInstrument",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "217": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "0x00"
      ]
    },
    "219": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "0x00",
        "0"
      ]
    },
    "220": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%2#0"
      ]
    },
    "222": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0"
      ]
    },
    "223": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0",
        "0x151f7c75"
      ]
    },
    "224": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%1#0"
      ]
    },
    "225": {
      "op": "concat",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "226": {
      "op": "log",
      "stack_out": []
    },
    "227": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "228": {
      "op": "return",
      "stack_out": []
    },
    "229": {
      "block": "main_createInstrument_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "231": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "232": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "233": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "235": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "236": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "239": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "242": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "245": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "248": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%14#0"
      ]
    },
    "251": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%15#0"
      ]
    },
    "254": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%15#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "257": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "258": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "261": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%18#0"
      ]
    },
    "264": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "267": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%18#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%18#0",
        "tmp%20#0"
      ]
    },
    "270": {
      "callsub": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.createInstrument",
      "op": "callsub createInstrument",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "273": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "274": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "275": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "276": {
      "op": "concat",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "277": {
      "op": "log",
      "stack_out": []
    },
    "278": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "279": {
      "op": "return",
      "stack_out": []
    },
    "280": {
      "block": "main_initialize_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "282": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "283": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "284": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "286": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "287": {
      "callsub": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.initialize",
      "op": "callsub initialize",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "290": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "0x00"
      ]
    },
    "292": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "293": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "295": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "296": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "297": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ]
    },
    "298": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "299": {
      "op": "log",
      "stack_out": []
    },
    "300": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "301": {
      "op": "return",
      "stack_out": []
    },
    "302": {
      "block": "main_bare_routing@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "304": {
      "op": "bnz main_after_if_else@15",
      "stack_out": []
    },
    "307": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "309": {
      "op": "!",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "310": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "311": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "312": {
      "op": "return",
      "stack_out": []
    },
    "313": {
      "subroutine": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.initialize",
      "params": {},
      "block": "initialize",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "315": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "317": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "318": {
      "error": "Only creator can initialize",
      "op": "assert // Only creator can initialize",
      "stack_out": []
    },
    "319": {
      "op": "bytec_1 // \"nextInstrumentId\"",
      "defined_out": [
        "\"nextInstrumentId\""
      ],
      "stack_out": [
        "\"nextInstrumentId\""
      ]
    },
    "320": {
      "op": "intc_0 // 1",
      "defined_out": [
        "\"nextInstrumentId\"",
        "1"
      ],
      "stack_out": [
        "\"nextInstrumentId\"",
        "1"
      ]
    },
    "321": {
      "op": "app_global_put",
      "stack_out": []
    },
    "322": {
      "op": "bytec_2 // \"totalInstruments\"",
      "defined_out": [
        "\"totalInstruments\""
      ],
      "stack_out": [
        "\"totalInstruments\""
      ]
    },
    "323": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"totalInstruments\"",
        "0"
      ],
      "stack_out": [
        "\"totalInstruments\"",
        "0"
      ]
    },
    "324": {
      "op": "app_global_put",
      "stack_out": []
    },
    "325": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "326": {
      "retsub": true,
      "op": "retsub"
    },
    "327": {
      "subroutine": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.createInstrument",
      "params": {
        "instrumentNumber#0": "bytes",
        "exporterAddress#0": "bytes",
        "importerAddress#0": "bytes",
        "cargoDescription#0": "bytes",
        "cargoValue#0": "uint64",
        "originPort#0": "bytes",
        "destinationPort#0": "bytes"
      },
      "block": "createInstrument",
      "stack_in": [],
      "op": "proto 7 1"
    },
    "330": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "331": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0"
      ]
    },
    "333": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "0"
      ]
    },
    "334": {
      "op": "bytec_1 // \"nextInstrumentId\"",
      "defined_out": [
        "\"nextInstrumentId\"",
        "0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "0",
        "\"nextInstrumentId\""
      ]
    },
    "335": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "336": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "maybe_value%0#0"
      ]
    },
    "337": {
      "op": "bnz createInstrument_after_if_else@2",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0"
      ]
    },
    "340": {
      "op": "bytec_1 // \"nextInstrumentId\"",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "\"nextInstrumentId\""
      ]
    },
    "341": {
      "op": "intc_0 // 1",
      "defined_out": [
        "\"nextInstrumentId\"",
        "1"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "\"nextInstrumentId\"",
        "1"
      ]
    },
    "342": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0"
      ]
    },
    "343": {
      "op": "bytec_2 // \"totalInstruments\"",
      "defined_out": [
        "\"totalInstruments\""
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "\"totalInstruments\""
      ]
    },
    "344": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "\"totalInstruments\"",
        "0"
      ]
    },
    "345": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0"
      ]
    },
    "346": {
      "block": "createInstrument_after_if_else@2",
      "stack_in": [
        "tmp%0#1",
        "instrumentId#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "0"
      ]
    },
    "347": {
      "op": "bytec_1 // \"nextInstrumentId\"",
      "defined_out": [
        "\"nextInstrumentId\"",
        "0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "0",
        "\"nextInstrumentId\""
      ]
    },
    "348": {
      "op": "app_global_get_ex",
      "defined_out": [
        "instrumentId#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "maybe_exists%1#0"
      ]
    },
    "349": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "maybe_exists%1#0",
        "instrumentId#0"
      ]
    },
    "350": {
      "op": "dup",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "maybe_exists%1#0",
        "instrumentId#0",
        "instrumentId#0 (copy)"
      ]
    },
    "351": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "maybe_exists%1#0",
        "instrumentId#0"
      ]
    },
    "353": {
      "op": "frame_bury 1",
      "defined_out": [
        "instrumentId#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "maybe_exists%1#0"
      ]
    },
    "355": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "356": {
      "op": "itxn_begin"
    },
    "357": {
      "op": "frame_dig -6",
      "defined_out": [
        "exporterAddress#0 (copy)",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "exporterAddress#0 (copy)"
      ]
    },
    "359": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "361": {
      "op": "frame_dig -6",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "exporterAddress#0 (copy)"
      ]
    },
    "363": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "365": {
      "op": "frame_dig -6",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "exporterAddress#0 (copy)"
      ]
    },
    "367": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "369": {
      "op": "frame_dig -6",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "exporterAddress#0 (copy)"
      ]
    },
    "371": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "373": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "0"
      ]
    },
    "374": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "376": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "1"
      ]
    },
    "377": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "379": {
      "op": "bytec 5 // \"eBL\"",
      "defined_out": [
        "\"eBL\"",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "\"eBL\""
      ]
    },
    "381": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "383": {
      "op": "bytec 5 // \"eBL\"",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "\"eBL\""
      ]
    },
    "385": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "387": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "3"
      ]
    },
    "389": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "391": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "0"
      ]
    },
    "392": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "394": {
      "op": "itxn_submit"
    },
    "395": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "assetResult.CreatedAssetID#0",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0"
      ]
    },
    "397": {
      "op": "itxn_begin"
    },
    "398": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0",
        "1"
      ]
    },
    "399": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0"
      ]
    },
    "401": {
      "op": "frame_dig -6",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0",
        "exporterAddress#0 (copy)"
      ]
    },
    "403": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0"
      ]
    },
    "405": {
      "op": "dup",
      "defined_out": [
        "assetResult.CreatedAssetID#0",
        "assetResult.CreatedAssetID#0 (copy)",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0",
        "assetResult.CreatedAssetID#0 (copy)"
      ]
    },
    "406": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0"
      ]
    },
    "408": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "assetResult.CreatedAssetID#0",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0",
        "4"
      ]
    },
    "409": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0"
      ]
    },
    "411": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0",
        "0"
      ]
    },
    "412": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0"
      ]
    },
    "414": {
      "op": "itxn_submit"
    },
    "415": {
      "op": "frame_dig -7",
      "defined_out": [
        "assetResult.CreatedAssetID#0",
        "instrumentId#0",
        "instrumentNumber#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0",
        "instrumentNumber#0 (copy)"
      ]
    },
    "417": {
      "op": "len",
      "defined_out": [
        "assetResult.CreatedAssetID#0",
        "instrumentId#0",
        "length%0#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0",
        "length%0#0"
      ]
    },
    "418": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "assetResult.CreatedAssetID#0",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0",
        "as_bytes%0#0"
      ]
    },
    "419": {
      "op": "extract 6 2",
      "defined_out": [
        "assetResult.CreatedAssetID#0",
        "instrumentId#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0",
        "length_uint16%0#0"
      ]
    },
    "422": {
      "op": "frame_dig -7",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0",
        "length_uint16%0#0",
        "instrumentNumber#0 (copy)"
      ]
    },
    "424": {
      "op": "concat",
      "defined_out": [
        "assetResult.CreatedAssetID#0",
        "encoded_value%0#0",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "assetResult.CreatedAssetID#0",
        "encoded_value%0#0"
      ]
    },
    "425": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "assetResult.CreatedAssetID#0"
      ]
    },
    "426": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "instrumentId#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "427": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "encoded_value%0#0",
        "instrumentId#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "to_encode%0#0"
      ]
    },
    "429": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "430": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "encoded_value%0#0",
        "instrumentId#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "tmp%1#0"
      ]
    },
    "432": {
      "op": "pushint 2592000 // 2592000",
      "defined_out": [
        "2592000",
        "encoded_value%0#0",
        "instrumentId#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "tmp%1#0",
        "2592000"
      ]
    },
    "437": {
      "op": "+",
      "defined_out": [
        "encoded_value%0#0",
        "instrumentId#0",
        "to_encode%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "to_encode%1#0"
      ]
    },
    "438": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "439": {
      "op": "frame_dig -3",
      "defined_out": [
        "cargoValue#0 (copy)",
        "encoded_value%0#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "cargoValue#0 (copy)"
      ]
    },
    "441": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "442": {
      "op": "frame_dig -4",
      "defined_out": [
        "cargoDescription#0 (copy)",
        "encoded_value%0#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "cargoDescription#0 (copy)"
      ]
    },
    "444": {
      "op": "len",
      "defined_out": [
        "encoded_value%0#0",
        "instrumentId#0",
        "length%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "length%1#0"
      ]
    },
    "445": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_value%0#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "as_bytes%1#0"
      ]
    },
    "446": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_value%0#0",
        "instrumentId#0",
        "length_uint16%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "length_uint16%1#0"
      ]
    },
    "449": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "length_uint16%1#0",
        "cargoDescription#0 (copy)"
      ]
    },
    "451": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0"
      ]
    },
    "452": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "instrumentId#0",
        "originPort#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "originPort#0 (copy)"
      ]
    },
    "454": {
      "op": "len",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "instrumentId#0",
        "length%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "length%2#0"
      ]
    },
    "455": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "as_bytes%2#0"
      ]
    },
    "456": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "instrumentId#0",
        "length_uint16%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "length_uint16%2#0"
      ]
    },
    "459": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "length_uint16%2#0",
        "originPort#0 (copy)"
      ]
    },
    "461": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0"
      ]
    },
    "462": {
      "op": "frame_dig -1",
      "defined_out": [
        "destinationPort#0 (copy)",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "destinationPort#0 (copy)"
      ]
    },
    "464": {
      "op": "len",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "instrumentId#0",
        "length%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "length%3#0"
      ]
    },
    "465": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "as_bytes%3#0"
      ]
    },
    "466": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "instrumentId#0",
        "length_uint16%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "length_uint16%3#0"
      ]
    },
    "469": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "length_uint16%3#0",
        "destinationPort#0 (copy)"
      ]
    },
    "471": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ]
    },
    "472": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "to_encode%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "to_encode%2#0"
      ]
    },
    "474": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0"
      ]
    },
    "475": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "to_encode%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "to_encode%3#0"
      ]
    },
    "477": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "478": {
      "op": "dig 9",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "480": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "data_length%0#0"
      ]
    },
    "481": {
      "op": "pushint 176 // 176",
      "defined_out": [
        "176",
        "data_length%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "data_length%0#0",
        "176"
      ]
    },
    "484": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0"
      ]
    },
    "485": {
      "op": "pushbytes 0x00b0",
      "defined_out": [
        "0x00b0",
        "current_tail_offset%1#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "0x00b0"
      ]
    },
    "489": {
      "op": "uncover 10",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "0x00b0",
        "val_as_bytes%0#0"
      ]
    },
    "491": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "492": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "494": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "495": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%2#0"
      ]
    },
    "497": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "498": {
      "op": "dig 7",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%3#0 (copy)",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%3#0 (copy)"
      ]
    },
    "500": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "501": {
      "op": "frame_dig -6",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%5#0",
        "exporterAddress#0 (copy)"
      ]
    },
    "503": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "504": {
      "op": "frame_dig -6",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%6#0",
        "exporterAddress#0 (copy)"
      ]
    },
    "506": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%7#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "507": {
      "op": "frame_dig -5",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%7#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "importerAddress#0 (copy)",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%7#0",
        "importerAddress#0 (copy)"
      ]
    },
    "509": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%8#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "510": {
      "op": "dig 1",
      "defined_out": [
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)",
        "encoded_tuple_buffer%8#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%8#0",
        "current_tail_offset%1#0 (copy)"
      ]
    },
    "512": {
      "op": "itob",
      "defined_out": [
        "as_bytes%5#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%8#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%8#0",
        "as_bytes%5#0"
      ]
    },
    "513": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%8#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "offset_as_uint16%1#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%8#0",
        "offset_as_uint16%1#0"
      ]
    },
    "516": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%9#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "517": {
      "op": "dig 6",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%9#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%1#0 (copy)",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%9#0",
        "encoded_value%1#0 (copy)"
      ]
    },
    "519": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%1#0",
        "data_length%1#0",
        "encoded_tuple_buffer%9#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%9#0",
        "data_length%1#0"
      ]
    },
    "520": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%9#0",
        "data_length%1#0",
        "current_tail_offset%1#0"
      ]
    },
    "522": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%9#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%9#0",
        "current_tail_offset%2#0"
      ]
    },
    "523": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "524": {
      "op": "uncover 7",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%3#0"
      ]
    },
    "526": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%10#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "527": {
      "op": "dig 1",
      "defined_out": [
        "current_tail_offset%2#0",
        "current_tail_offset%2#0 (copy)",
        "encoded_tuple_buffer%10#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%10#0",
        "current_tail_offset%2#0 (copy)"
      ]
    },
    "529": {
      "op": "itob",
      "defined_out": [
        "as_bytes%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%10#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%10#0",
        "as_bytes%6#0"
      ]
    },
    "530": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%10#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "offset_as_uint16%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%10#0",
        "offset_as_uint16%2#0"
      ]
    },
    "533": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%11#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "534": {
      "op": "dig 5",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%11#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%2#0 (copy)",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%11#0",
        "encoded_value%2#0 (copy)"
      ]
    },
    "536": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%2#0",
        "data_length%2#0",
        "encoded_tuple_buffer%11#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%11#0",
        "data_length%2#0"
      ]
    },
    "537": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%11#0",
        "data_length%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "539": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%11#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%11#0",
        "current_tail_offset%3#0"
      ]
    },
    "540": {
      "op": "itob",
      "defined_out": [
        "as_bytes%7#0",
        "encoded_tuple_buffer%11#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%11#0",
        "as_bytes%7#0"
      ]
    },
    "541": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "offset_as_uint16%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%11#0",
        "offset_as_uint16%3#0"
      ]
    },
    "544": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "545": {
      "op": "pushbytes 0x00000000000001f4",
      "defined_out": [
        "0x00000000000001f4",
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%12#0",
        "0x00000000000001f4"
      ]
    },
    "555": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "556": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%13#0",
        "0x0000000000000001"
      ]
    },
    "566": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "567": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%14#0",
        "val_as_bytes%5#0"
      ]
    },
    "569": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "570": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%15#0",
        "val_as_bytes%6#0"
      ]
    },
    "571": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%16#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "572": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%16#0",
        "encoded_value%0#0"
      ]
    },
    "574": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%17#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "575": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%17#0",
        "encoded_value%1#0"
      ]
    },
    "577": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "578": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%18#0",
        "encoded_value%2#0"
      ]
    },
    "580": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%19#0",
        "encoded_value%3#0",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%19#0"
      ]
    },
    "581": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "encoded_tuple_buffer%19#0",
        "encoded_value%3#0"
      ]
    },
    "582": {
      "op": "concat",
      "defined_out": [
        "instrument#0",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "instrument#0"
      ]
    },
    "583": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrument#0",
        "instrumentId#0"
      ]
    },
    "584": {
      "op": "itob",
      "defined_out": [
        "instrument#0",
        "instrumentId#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrument#0",
        "tmp%2#0"
      ]
    },
    "585": {
      "op": "dup",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrument#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "586": {
      "op": "cover 2",
      "defined_out": [
        "instrument#0",
        "instrumentId#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "instrument#0",
        "tmp%2#0"
      ]
    },
    "588": {
      "op": "bytec_3 // \"instruments\"",
      "defined_out": [
        "\"instruments\"",
        "instrument#0",
        "instrumentId#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "instrument#0",
        "tmp%2#0",
        "\"instruments\""
      ]
    },
    "589": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "instrument#0",
        "\"instruments\"",
        "tmp%2#0"
      ]
    },
    "590": {
      "op": "concat",
      "defined_out": [
        "instrument#0",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "instrument#0",
        "tmp%3#0"
      ]
    },
    "591": {
      "op": "dup",
      "defined_out": [
        "instrument#0",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "instrument#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "592": {
      "op": "box_del",
      "defined_out": [
        "instrument#0",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%3#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "instrument#0",
        "tmp%3#0",
        "{box_del}"
      ]
    },
    "593": {
      "op": "pop",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "instrument#0",
        "tmp%3#0"
      ]
    },
    "594": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%3#0",
        "instrument#0"
      ]
    },
    "595": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0"
      ]
    },
    "596": {
      "op": "bytec 6 // \"exp_inst\"",
      "defined_out": [
        "\"exp_inst\"",
        "instrumentId#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "\"exp_inst\""
      ]
    },
    "598": {
      "op": "frame_dig -6",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "\"exp_inst\"",
        "exporterAddress#0 (copy)"
      ]
    },
    "600": {
      "op": "concat",
      "defined_out": [
        "instrumentId#0",
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%0#1"
      ]
    },
    "601": {
      "op": "dup",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%0#1",
        "tmp%0#1"
      ]
    },
    "602": {
      "op": "frame_bury 0",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%0#1"
      ]
    },
    "604": {
      "op": "box_len",
      "defined_out": [
        "instrumentId#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "605": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "maybe_exists%0#0"
      ]
    },
    "607": {
      "op": "bz createInstrument_else_body@7",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0"
      ]
    },
    "610": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%0#1"
      ]
    },
    "612": {
      "op": "dup",
      "defined_out": [
        "instrumentId#0",
        "tmp%0#1",
        "tmp%0#1 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ]
    },
    "613": {
      "op": "box_get",
      "defined_out": [
        "instrumentId#0",
        "instruments#0",
        "maybe_exists%1#0",
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%0#1",
        "instruments#0",
        "maybe_exists%1#0"
      ]
    },
    "614": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%0#1",
        "instruments#0"
      ]
    },
    "615": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "instrumentId#0",
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%0#1",
        "expr_value_trimmed%0#0"
      ]
    },
    "618": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "expr_value_trimmed%0#0",
        "tmp%2#0"
      ]
    },
    "620": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "instrumentId#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "concatenated%0#0"
      ]
    },
    "621": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "instrumentId#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "622": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "instrumentId#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "623": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "concatenated%0#0",
        "instrumentId#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "624": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "instrumentId#0",
        "len_%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "625": {
      "op": "itob",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "626": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "instrumentId#0",
        "len_16_bit%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "629": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "630": {
      "op": "concat",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "instruments#0"
      ]
    },
    "631": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "instruments#0",
        "tmp%0#1 (copy)"
      ]
    },
    "633": {
      "op": "box_del",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "instruments#0",
        "{box_del}"
      ]
    },
    "634": {
      "op": "pop",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "instruments#0"
      ]
    },
    "635": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0"
      ]
    },
    "636": {
      "block": "createInstrument_after_if_else@8",
      "stack_in": [
        "tmp%0#1",
        "instrumentId#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "638": {
      "op": "dup",
      "defined_out": [
        "instrumentId#0",
        "instrumentId#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "instrumentId#0 (copy)"
      ]
    },
    "639": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "instrumentId#0",
        "instrumentId#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "instrumentId#0 (copy)",
        "1"
      ]
    },
    "640": {
      "op": "+",
      "defined_out": [
        "instrumentId#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "new_state_value%0#0"
      ]
    },
    "641": {
      "op": "bytec_1 // \"nextInstrumentId\"",
      "defined_out": [
        "\"nextInstrumentId\"",
        "instrumentId#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "new_state_value%0#0",
        "\"nextInstrumentId\""
      ]
    },
    "642": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "\"nextInstrumentId\"",
        "new_state_value%0#0"
      ]
    },
    "643": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "644": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "0"
      ]
    },
    "645": {
      "op": "bytec_2 // \"totalInstruments\"",
      "defined_out": [
        "\"totalInstruments\"",
        "0",
        "instrumentId#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "0",
        "\"totalInstruments\""
      ]
    },
    "646": {
      "op": "app_global_get_ex",
      "defined_out": [
        "instrumentId#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "647": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "maybe_value%2#0"
      ]
    },
    "648": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "649": {
      "op": "+",
      "defined_out": [
        "instrumentId#0",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "new_state_value%1#0"
      ]
    },
    "650": {
      "op": "bytec_2 // \"totalInstruments\"",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "new_state_value%1#0",
        "\"totalInstruments\""
      ]
    },
    "651": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0",
        "\"totalInstruments\"",
        "new_state_value%1#0"
      ]
    },
    "652": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "instrumentId#0"
      ]
    },
    "653": {
      "op": "frame_bury 0"
    },
    "655": {
      "retsub": true,
      "op": "retsub"
    },
    "656": {
      "block": "createInstrument_else_body@7",
      "stack_in": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0"
      ],
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "657": {
      "op": "len",
      "defined_out": [
        "byte_len%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "byte_len%1#0"
      ]
    },
    "658": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "byte_len%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "byte_len%1#0",
        "8"
      ]
    },
    "659": {
      "op": "/",
      "defined_out": [
        "len_%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "len_%1#0"
      ]
    },
    "660": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "as_bytes%1#0"
      ]
    },
    "661": {
      "op": "extract 6 2",
      "defined_out": [
        "len_16_bit%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%2#0",
        "len_16_bit%1#0"
      ]
    },
    "664": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "len_16_bit%1#0",
        "tmp%2#0"
      ]
    },
    "665": {
      "op": "concat",
      "defined_out": [
        "newArray#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "newArray#1"
      ]
    },
    "666": {
      "op": "frame_dig 0",
      "defined_out": [
        "newArray#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "newArray#1",
        "tmp%0#1"
      ]
    },
    "668": {
      "op": "dup",
      "defined_out": [
        "newArray#1",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "newArray#1",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ]
    },
    "669": {
      "op": "box_del",
      "defined_out": [
        "newArray#1",
        "tmp%0#1",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "newArray#1",
        "tmp%0#1",
        "{box_del}"
      ]
    },
    "670": {
      "op": "pop",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "newArray#1",
        "tmp%0#1"
      ]
    },
    "671": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0",
        "tmp%0#1",
        "newArray#1"
      ]
    },
    "672": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#1",
        "instrumentId#0"
      ]
    },
    "673": {
      "op": "b createInstrument_after_if_else@8"
    },
    "676": {
      "subroutine": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.endorseInstrument",
      "params": {
        "instrumentId#0": "uint64",
        "newHolderAddress#0": "bytes"
      },
      "block": "endorseInstrument",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "679": {
      "op": "frame_dig -2",
      "defined_out": [
        "instrumentId#0 (copy)"
      ],
      "stack_out": [
        "instrumentId#0 (copy)"
      ]
    },
    "681": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "682": {
      "op": "bytec_3 // \"instruments\"",
      "defined_out": [
        "\"instruments\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"instruments\""
      ]
    },
    "683": {
      "op": "swap",
      "stack_out": [
        "\"instruments\"",
        "tmp%0#0"
      ]
    },
    "684": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "685": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "686": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "687": {
      "op": "bury 1",
      "stack_out": [
        "tmp%1#0",
        "maybe_exists%0#0"
      ]
    },
    "689": {
      "error": "Instrument not found",
      "op": "assert // Instrument not found",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "690": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "691": {
      "op": "box_get",
      "defined_out": [
        "instrument#0",
        "maybe_exists%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "maybe_exists%1#0"
      ]
    },
    "692": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%1#0",
        "instrument#0"
      ]
    },
    "693": {
      "op": "dup",
      "defined_out": [
        "instrument#0",
        "instrument#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "instrument#0 (copy)"
      ]
    },
    "694": {
      "error": "Index access is out of bounds",
      "op": "extract 34 32 // on error: Index access is out of bounds",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "tmp%4#0"
      ]
    },
    "697": {
      "op": "txn Sender",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "699": {
      "op": "==",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "tmp%6#0"
      ]
    },
    "700": {
      "error": "Only holder can endorse",
      "op": "assert // Only holder can endorse",
      "stack_out": [
        "tmp%1#0",
        "instrument#0"
      ]
    },
    "701": {
      "op": "frame_dig -1",
      "defined_out": [
        "instrument#0",
        "newHolderAddress#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "newHolderAddress#0 (copy)"
      ]
    },
    "703": {
      "op": "replace2 34",
      "stack_out": [
        "tmp%1#0",
        "instrument#0"
      ]
    },
    "705": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "to_encode%0#0"
      ]
    },
    "707": {
      "op": "itob",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "val_as_bytes%0#0"
      ]
    },
    "708": {
      "op": "replace2 168",
      "stack_out": [
        "tmp%1#0",
        "instrument#0"
      ]
    },
    "710": {
      "op": "dig 1",
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "tmp%1#0 (copy)"
      ]
    },
    "712": {
      "op": "box_del",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "{box_del}"
      ]
    },
    "713": {
      "op": "pop",
      "stack_out": [
        "tmp%1#0",
        "instrument#0"
      ]
    },
    "714": {
      "op": "swap",
      "stack_out": [
        "instrument#0",
        "tmp%1#0"
      ]
    },
    "715": {
      "op": "dig 1",
      "stack_out": [
        "instrument#0",
        "tmp%1#0",
        "instrument#0 (copy)"
      ]
    },
    "717": {
      "op": "box_put",
      "stack_out": [
        "instrument#0"
      ]
    },
    "718": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "instrument#0"
      ],
      "stack_out": [
        "instrument#0",
        "2"
      ]
    },
    "720": {
      "op": "extract_uint64",
      "defined_out": [
        "asset#0"
      ],
      "stack_out": [
        "asset#0"
      ]
    },
    "721": {
      "op": "itxn_begin"
    },
    "722": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "asset#0"
      ],
      "stack_out": [
        "asset#0",
        "1"
      ]
    },
    "723": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "asset#0"
      ]
    },
    "725": {
      "op": "frame_dig -1",
      "stack_out": [
        "asset#0",
        "newHolderAddress#0 (copy)"
      ]
    },
    "727": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "asset#0"
      ]
    },
    "729": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "731": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "732": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "734": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "735": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "737": {
      "op": "itxn_submit"
    },
    "738": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "739": {
      "retsub": true,
      "op": "retsub"
    },
    "740": {
      "subroutine": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.getInstrument",
      "params": {
        "instrumentId#0": "uint64"
      },
      "block": "getInstrument",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "743": {
      "op": "frame_dig -1",
      "defined_out": [
        "instrumentId#0 (copy)"
      ],
      "stack_out": [
        "instrumentId#0 (copy)"
      ]
    },
    "745": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "746": {
      "op": "bytec_3 // \"instruments\"",
      "defined_out": [
        "\"instruments\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"instruments\""
      ]
    },
    "747": {
      "op": "swap",
      "stack_out": [
        "\"instruments\"",
        "tmp%0#0"
      ]
    },
    "748": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "749": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "750": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "751": {
      "op": "bury 1",
      "stack_out": [
        "tmp%1#0",
        "maybe_exists%0#0"
      ]
    },
    "753": {
      "error": "Instrument not found",
      "op": "assert // Instrument not found",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "754": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "755": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "756": {
      "retsub": true,
      "op": "retsub"
    },
    "757": {
      "subroutine": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.getExporterInstruments",
      "params": {
        "exporterAddress#0": "bytes"
      },
      "block": "getExporterInstruments",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "760": {
      "op": "bytec 6 // \"exp_inst\"",
      "defined_out": [
        "\"exp_inst\""
      ],
      "stack_out": [
        "\"exp_inst\""
      ]
    },
    "762": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"exp_inst\"",
        "exporterAddress#0 (copy)"
      ],
      "stack_out": [
        "\"exp_inst\"",
        "exporterAddress#0 (copy)"
      ]
    },
    "764": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "765": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "766": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "767": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "769": {
      "op": "bz getExporterInstruments_after_if_else@2",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "772": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "774": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "775": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "776": {
      "op": "swap"
    },
    "777": {
      "retsub": true,
      "op": "retsub"
    },
    "778": {
      "block": "getExporterInstruments_after_if_else@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "pushbytes 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x0000"
      ]
    },
    "782": {
      "op": "swap"
    },
    "783": {
      "retsub": true,
      "op": "retsub"
    },
    "784": {
      "subroutine": "smart_contracts/trade_instrument_registry_v3/TradeInstrumentRegistry.algo.ts::TradeInstrumentRegistryV3.updateInstrumentStatus",
      "params": {
        "instrumentId#0": "uint64",
        "newStatus#0": "uint64"
      },
      "block": "updateInstrumentStatus",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "787": {
      "op": "frame_dig -2",
      "defined_out": [
        "instrumentId#0 (copy)"
      ],
      "stack_out": [
        "instrumentId#0 (copy)"
      ]
    },
    "789": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "790": {
      "op": "bytec_3 // \"instruments\"",
      "defined_out": [
        "\"instruments\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"instruments\""
      ]
    },
    "791": {
      "op": "swap",
      "stack_out": [
        "\"instruments\"",
        "tmp%0#0"
      ]
    },
    "792": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "793": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "794": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "795": {
      "op": "bury 1",
      "stack_out": [
        "tmp%1#0",
        "maybe_exists%0#0"
      ]
    },
    "797": {
      "error": "Instrument not found",
      "op": "assert // Instrument not found",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "798": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "799": {
      "op": "box_get",
      "defined_out": [
        "instrument#0",
        "maybe_exists%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "maybe_exists%1#0"
      ]
    },
    "800": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%1#0",
        "instrument#0"
      ]
    },
    "801": {
      "op": "dup",
      "defined_out": [
        "instrument#0",
        "instrument#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "instrument#0 (copy)"
      ]
    },
    "802": {
      "error": "Index access is out of bounds",
      "op": "extract 34 32 // on error: Index access is out of bounds",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "tmp%4#0"
      ]
    },
    "805": {
      "op": "txn Sender",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "807": {
      "op": "==",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "tmp%6#0"
      ]
    },
    "808": {
      "error": "Only holder can update status",
      "op": "assert // Only holder can update status",
      "stack_out": [
        "tmp%1#0",
        "instrument#0"
      ]
    },
    "809": {
      "op": "frame_dig -1",
      "defined_out": [
        "instrument#0",
        "newStatus#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "newStatus#0 (copy)"
      ]
    },
    "811": {
      "op": "itob",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "val_as_bytes%0#0"
      ]
    },
    "812": {
      "op": "replace2 152",
      "stack_out": [
        "tmp%1#0",
        "instrument#0"
      ]
    },
    "814": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "to_encode%0#0"
      ]
    },
    "816": {
      "op": "itob",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "val_as_bytes%1#0"
      ]
    },
    "817": {
      "op": "replace2 168",
      "stack_out": [
        "tmp%1#0",
        "instrument#0"
      ]
    },
    "819": {
      "op": "dig 1",
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "tmp%1#0 (copy)"
      ]
    },
    "821": {
      "op": "box_del",
      "defined_out": [
        "instrument#0",
        "tmp%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%1#0",
        "instrument#0",
        "{box_del}"
      ]
    },
    "822": {
      "op": "pop",
      "stack_out": [
        "tmp%1#0",
        "instrument#0"
      ]
    },
    "823": {
      "op": "box_put",
      "stack_out": []
    },
    "824": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "825": {
      "retsub": true,
      "op": "retsub"
    }
  }
}