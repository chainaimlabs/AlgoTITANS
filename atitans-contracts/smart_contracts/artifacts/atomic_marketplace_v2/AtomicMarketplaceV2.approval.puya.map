{
  "version": 3,
  "sources": [
    "C:/SATHYA/CHAINAIM3003/mcp-servers/altry/atry2/atitans1/projects/atitans1-contracts/smart_contracts/atomic_marketplace_v2/contract.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAuOE;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAZA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAnJF;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAmJE;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA1CA;;AAAA;AAAA;AAAA;;AAAA;AAzGF;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAyGE;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AA1EF;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AA0EE;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAtDA;;AAAA;AAAA;AAAA;;AAAA;AApBF;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAoBE;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AApBF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAoBE;;;AAlBA;AAAA;AA0B2B;AAAA;;AAArB;;;AA1BN;AA2BgC;AAA5B;AA1BJ;AAAA;AA6B8B;AAAA;;AAAxB;;;AA7BN;AA8BmC;AAA/B;AA7BJ;AAAA;;AAgC0B;AAAA;;AAApB;;;AAhCN;;AAiC+B;AAA3B;AAhCJ;AAAA;;AAmCwB;AAAA;;AAAlB;;;AAnCN;;AAoC6B;AAAzB;AAnCJ;AAAA;;AAsC+B;AAAA;;AAAzB;;;AAtCN;;AAuCoC;AAAhC;AAtCJ;AAAA;;AAyC+B;AAAA;;AAAzB;;;AAzCN;;AA0CI;;AAAA;AAvCJ;AAAA;;AA0CyB;AAAA;;AAAnB;;;AA1CN;;AA2CI;;AAAA;AAvCJ;AAAA;;AA0CwB;AAAA;;AAAlB;;;AA1CN;;AA2CI;;AAAA;AA1CJ;AAAA;;AA6CwB;AAAA;;AAAlB;;;AA7CN;;AA8CI;;AAAA;AAlDJ;AAAA;AAqD2B;AAAA;;AAArB;;;AArDN;AAsDgC;AAA5B;AAGK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;AAMF;;;AAxEA;AAAA;AAiF2B;AAAA;;AAArB;;;AAjFN;AAkFgC;AAA5B;AAhFJ;AAAA;;AAmF0B;AAAA;;AAApB;;;AAnFN;;AAoF+B;AAA3B;AAtFJ;AAAA;AAAA;AAAA;AA0F0D;AAA5B;AA1F9B;AA0FE;AAAA;AA1FF;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AAAA;AA4FwD;AAA3B;AA5F7B;;AA4FE;AAAA;AAEA;AAOF;;;AAtGA;AAAA;AA6G8B;AAAA;;AAAxB;;;AA7GN;AA8GmC;AAA/B;AA5GJ;AAAA;;AA+GwB;AAAA;;AAAlB;;;AA/GN;;AAgH6B;AAAzB;AA/GJ;AAAA;;AAkH+B;AAAA;;AAAzB;;;AAlHN;;AAmHoC;AAAhC;AAlHJ;AAAA;;AAqH+B;AAAA;;AAAzB;;;AArHN;;AAsHoC;AAAhC;AA1HJ;AAAA;AAAA;AAAA;AA8HgE;AAA/B;AA9HjC;AA8HE;AAAA;AA9HF;AAAA;AAAA;AAAA;AAmIQ;;AADwB;;;;AACH;AACrB;AAAiC;AAAb;AAlI5B;AAAA;;AAAA;AAAA;AAqI2B;;AAAA;AArI3B;;AAqIE;AAAA;AApIF;AAAA;;AAAA;AAAA;AAqIkC;AArIlC;;AAqIE;AAAA;AAEA;AAMF;;;AASS;;AAAA;;AAAgD;;AAAhD;;AAAA;;;AAAP;AAjJF;AAAA;AAuM2B;AAAA;;AAArB;;;AAvMN;AAwMgC;AAA5B;AAxMJ;AA0M8B;AAA5B;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;AA3MF;AAAA;AAkN2B;AAAA;;AAArB;;;AAlNN;AAmNgC;AAA5B;AAnNJ;AAqN8B;AAA5B;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 100"
    },
    "6": {
      "op": "bytecblock \"emergencyPause\" \"listingCounter\" \"settlementCounter\" 0x151f7c75 \"totalListings\" \"totalVolume\" \"totalFeesCollected\" \"marketplaceFeeRate\" \"blContractId\" \"usdcAssetId\" \"usdtAssetId\""
    },
    "162": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "164": {
      "op": "bz main_bare_routing@18",
      "stack_out": []
    },
    "167": {
      "op": "pushbytess 0xe9c0b141 0xfb85f994 0x3f382f67 0x74076a02 0xc13b4577 0x5126eed0 0x76c39ba4 0x22e12b7c 0xb579946d 0x4f56808d 0x8a19cdbd 0x3b95c48c 0xd42fd39f // method \"initializeMarketplace(string,uint64,uint64,uint64,uint64)string\", method \"createListing(uint64,uint64,uint64,uint64,uint64,uint64)uint64\", method \"atomicPurchase(uint64,uint64,uint64,uint64)uint64\", method \"atomicCrossBorderPurchase(uint64,uint64,uint64,uint64,uint64,uint64)uint64\", method \"getListingInfo(uint64)string\", method \"getSettlementInfo(uint64)string\", method \"getMarketplaceStats()string\", method \"getUserStats(string)string\", method \"cancelListing(uint64)string\", method \"updateListing(uint64,uint64,uint64,uint64)string\", method \"emergencyPauseMarketplace()string\", method \"resumeMarketplace()string\", method \"withdrawMarketplaceFees(uint64,uint64)string\"",
      "defined_out": [
        "Method(atomicCrossBorderPurchase(uint64,uint64,uint64,uint64,uint64,uint64)uint64)",
        "Method(atomicPurchase(uint64,uint64,uint64,uint64)uint64)",
        "Method(cancelListing(uint64)string)",
        "Method(createListing(uint64,uint64,uint64,uint64,uint64,uint64)uint64)",
        "Method(emergencyPauseMarketplace()string)",
        "Method(getListingInfo(uint64)string)",
        "Method(getMarketplaceStats()string)",
        "Method(getSettlementInfo(uint64)string)",
        "Method(getUserStats(string)string)",
        "Method(initializeMarketplace(string,uint64,uint64,uint64,uint64)string)",
        "Method(resumeMarketplace()string)",
        "Method(updateListing(uint64,uint64,uint64,uint64)string)",
        "Method(withdrawMarketplaceFees(uint64,uint64)string)"
      ],
      "stack_out": [
        "Method(initializeMarketplace(string,uint64,uint64,uint64,uint64)string)",
        "Method(createListing(uint64,uint64,uint64,uint64,uint64,uint64)uint64)",
        "Method(atomicPurchase(uint64,uint64,uint64,uint64)uint64)",
        "Method(atomicCrossBorderPurchase(uint64,uint64,uint64,uint64,uint64,uint64)uint64)",
        "Method(getListingInfo(uint64)string)",
        "Method(getSettlementInfo(uint64)string)",
        "Method(getMarketplaceStats()string)",
        "Method(getUserStats(string)string)",
        "Method(cancelListing(uint64)string)",
        "Method(updateListing(uint64,uint64,uint64,uint64)string)",
        "Method(emergencyPauseMarketplace()string)",
        "Method(resumeMarketplace()string)",
        "Method(withdrawMarketplaceFees(uint64,uint64)string)"
      ]
    },
    "234": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(atomicCrossBorderPurchase(uint64,uint64,uint64,uint64,uint64,uint64)uint64)",
        "Method(atomicPurchase(uint64,uint64,uint64,uint64)uint64)",
        "Method(cancelListing(uint64)string)",
        "Method(createListing(uint64,uint64,uint64,uint64,uint64,uint64)uint64)",
        "Method(emergencyPauseMarketplace()string)",
        "Method(getListingInfo(uint64)string)",
        "Method(getMarketplaceStats()string)",
        "Method(getSettlementInfo(uint64)string)",
        "Method(getUserStats(string)string)",
        "Method(initializeMarketplace(string,uint64,uint64,uint64,uint64)string)",
        "Method(resumeMarketplace()string)",
        "Method(updateListing(uint64,uint64,uint64,uint64)string)",
        "Method(withdrawMarketplaceFees(uint64,uint64)string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(initializeMarketplace(string,uint64,uint64,uint64,uint64)string)",
        "Method(createListing(uint64,uint64,uint64,uint64,uint64,uint64)uint64)",
        "Method(atomicPurchase(uint64,uint64,uint64,uint64)uint64)",
        "Method(atomicCrossBorderPurchase(uint64,uint64,uint64,uint64,uint64,uint64)uint64)",
        "Method(getListingInfo(uint64)string)",
        "Method(getSettlementInfo(uint64)string)",
        "Method(getMarketplaceStats()string)",
        "Method(getUserStats(string)string)",
        "Method(cancelListing(uint64)string)",
        "Method(updateListing(uint64,uint64,uint64,uint64)string)",
        "Method(emergencyPauseMarketplace()string)",
        "Method(resumeMarketplace()string)",
        "Method(withdrawMarketplaceFees(uint64,uint64)string)",
        "tmp%2#0"
      ]
    },
    "237": {
      "op": "match main_initializeMarketplace_route@3 main_createListing_route@4 main_atomicPurchase_route@5 main_atomicCrossBorderPurchase_route@6 main_getListingInfo_route@7 main_getSettlementInfo_route@8 main_getMarketplaceStats_route@9 main_getUserStats_route@10 main_cancelListing_route@11 main_updateListing_route@12 main_emergencyPauseMarketplace_route@13 main_resumeMarketplace_route@14 main_withdrawMarketplaceFees_route@15",
      "stack_out": []
    },
    "265": {
      "block": "main_after_if_else@22",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "266": {
      "op": "return",
      "stack_out": []
    },
    "267": {
      "block": "main_withdrawMarketplaceFees_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "269": {
      "op": "!",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "270": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "271": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "273": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "274": {
      "op": "pushbytes 0x151f7c7500274d61726b6574706c61636520666565732077697468647261776e207375636365737366756c6c79",
      "defined_out": [
        "0x151f7c7500274d61726b6574706c61636520666565732077697468647261776e207375636365737366756c6c79"
      ],
      "stack_out": [
        "0x151f7c7500274d61726b6574706c61636520666565732077697468647261776e207375636365737366756c6c79"
      ]
    },
    "321": {
      "op": "log",
      "stack_out": []
    },
    "322": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "323": {
      "op": "return",
      "stack_out": []
    },
    "324": {
      "block": "main_resumeMarketplace_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "326": {
      "op": "!",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "327": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "328": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "330": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "331": {
      "callsub": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.resumeMarketplace",
      "op": "callsub resumeMarketplace",
      "defined_out": [
        "to_encode%11#0"
      ],
      "stack_out": [
        "to_encode%11#0"
      ]
    },
    "334": {
      "op": "dup",
      "defined_out": [
        "to_encode%11#0",
        "to_encode%11#0 (copy)"
      ],
      "stack_out": [
        "to_encode%11#0",
        "to_encode%11#0 (copy)"
      ]
    },
    "335": {
      "op": "len",
      "defined_out": [
        "length%8#0",
        "to_encode%11#0"
      ],
      "stack_out": [
        "to_encode%11#0",
        "length%8#0"
      ]
    },
    "336": {
      "op": "itob",
      "defined_out": [
        "as_bytes%8#0",
        "to_encode%11#0"
      ],
      "stack_out": [
        "to_encode%11#0",
        "as_bytes%8#0"
      ]
    },
    "337": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%8#0",
        "to_encode%11#0"
      ],
      "stack_out": [
        "to_encode%11#0",
        "length_uint16%8#0"
      ]
    },
    "340": {
      "op": "swap",
      "stack_out": [
        "length_uint16%8#0",
        "to_encode%11#0"
      ]
    },
    "341": {
      "op": "concat",
      "defined_out": [
        "encoded_value%8#0"
      ],
      "stack_out": [
        "encoded_value%8#0"
      ]
    },
    "342": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%8#0"
      ],
      "stack_out": [
        "encoded_value%8#0",
        "0x151f7c75"
      ]
    },
    "343": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%8#0"
      ]
    },
    "344": {
      "op": "concat",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "345": {
      "op": "log",
      "stack_out": []
    },
    "346": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "347": {
      "op": "return",
      "stack_out": []
    },
    "348": {
      "block": "main_emergencyPauseMarketplace_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "350": {
      "op": "!",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "351": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "352": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "354": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "355": {
      "callsub": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.emergencyPauseMarketplace",
      "op": "callsub emergencyPauseMarketplace",
      "defined_out": [
        "to_encode%10#0"
      ],
      "stack_out": [
        "to_encode%10#0"
      ]
    },
    "358": {
      "op": "dup",
      "defined_out": [
        "to_encode%10#0",
        "to_encode%10#0 (copy)"
      ],
      "stack_out": [
        "to_encode%10#0",
        "to_encode%10#0 (copy)"
      ]
    },
    "359": {
      "op": "len",
      "defined_out": [
        "length%7#0",
        "to_encode%10#0"
      ],
      "stack_out": [
        "to_encode%10#0",
        "length%7#0"
      ]
    },
    "360": {
      "op": "itob",
      "defined_out": [
        "as_bytes%7#0",
        "to_encode%10#0"
      ],
      "stack_out": [
        "to_encode%10#0",
        "as_bytes%7#0"
      ]
    },
    "361": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%7#0",
        "to_encode%10#0"
      ],
      "stack_out": [
        "to_encode%10#0",
        "length_uint16%7#0"
      ]
    },
    "364": {
      "op": "swap",
      "stack_out": [
        "length_uint16%7#0",
        "to_encode%10#0"
      ]
    },
    "365": {
      "op": "concat",
      "defined_out": [
        "encoded_value%7#0"
      ],
      "stack_out": [
        "encoded_value%7#0"
      ]
    },
    "366": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%7#0"
      ],
      "stack_out": [
        "encoded_value%7#0",
        "0x151f7c75"
      ]
    },
    "367": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%7#0"
      ]
    },
    "368": {
      "op": "concat",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "369": {
      "op": "log",
      "stack_out": []
    },
    "370": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "371": {
      "op": "return",
      "stack_out": []
    },
    "372": {
      "block": "main_updateListing_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "374": {
      "op": "!",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "375": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "376": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "378": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "379": {
      "op": "pushbytes 0x151f7c7500344c697374696e6720757064617465642077697468206e65772070726963696e6720616e64207075726368617365206c696d697473",
      "defined_out": [
        "0x151f7c7500344c697374696e6720757064617465642077697468206e65772070726963696e6720616e64207075726368617365206c696d697473"
      ],
      "stack_out": [
        "0x151f7c7500344c697374696e6720757064617465642077697468206e65772070726963696e6720616e64207075726368617365206c696d697473"
      ]
    },
    "439": {
      "op": "log",
      "stack_out": []
    },
    "440": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "441": {
      "op": "return",
      "stack_out": []
    },
    "442": {
      "block": "main_cancelListing_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "444": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "445": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "446": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "448": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "449": {
      "op": "pushbytes 0x151f7c75001e4c697374696e672063616e63656c6c6564207375636365737366756c6c79",
      "defined_out": [
        "0x151f7c75001e4c697374696e672063616e63656c6c6564207375636365737366756c6c79"
      ],
      "stack_out": [
        "0x151f7c75001e4c697374696e672063616e63656c6c6564207375636365737366756c6c79"
      ]
    },
    "487": {
      "op": "log",
      "stack_out": []
    },
    "488": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "489": {
      "op": "return",
      "stack_out": []
    },
    "490": {
      "block": "main_getUserStats_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "492": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "493": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "494": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "496": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "497": {
      "op": "pushbytes 0x151f7c750031557365722053746174733a2054726164696e67207374617469737469637320617661696c61626c6520666f722075736572",
      "defined_out": [
        "0x151f7c750031557365722053746174733a2054726164696e67207374617469737469637320617661696c61626c6520666f722075736572"
      ],
      "stack_out": [
        "0x151f7c750031557365722053746174733a2054726164696e67207374617469737469637320617661696c61626c6520666f722075736572"
      ]
    },
    "554": {
      "op": "log",
      "stack_out": []
    },
    "555": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "556": {
      "op": "return",
      "stack_out": []
    },
    "557": {
      "block": "main_getMarketplaceStats_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "559": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "560": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "561": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "563": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "564": {
      "op": "pushbytes 0x151f7c7500384d61726b6574706c6163652053746174733a2054726164696e6720766f6c756d6520616e6420666565206461746120617661696c61626c65",
      "defined_out": [
        "0x151f7c7500384d61726b6574706c6163652053746174733a2054726164696e6720766f6c756d6520616e6420666565206461746120617661696c61626c65"
      ],
      "stack_out": [
        "0x151f7c7500384d61726b6574706c6163652053746174733a2054726164696e6720766f6c756d6520616e6420666565206461746120617661696c61626c65"
      ]
    },
    "628": {
      "op": "log",
      "stack_out": []
    },
    "629": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "630": {
      "op": "return",
      "stack_out": []
    },
    "631": {
      "block": "main_getSettlementInfo_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "633": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "634": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "635": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "637": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "638": {
      "op": "pushbytes 0x151f7c750034536574746c656d656e743a2041746f6d696320736574746c656d656e7420636f6d706c65746564207375636365737366756c6c79",
      "defined_out": [
        "0x151f7c750034536574746c656d656e743a2041746f6d696320736574746c656d656e7420636f6d706c65746564207375636365737366756c6c79"
      ],
      "stack_out": [
        "0x151f7c750034536574746c656d656e743a2041746f6d696320736574746c656d656e7420636f6d706c65746564207375636365737366756c6c79"
      ]
    },
    "698": {
      "op": "log",
      "stack_out": []
    },
    "699": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "700": {
      "op": "return",
      "stack_out": []
    },
    "701": {
      "block": "main_getListingInfo_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "703": {
      "op": "!",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "704": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "705": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "707": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "708": {
      "op": "pushbytes 0x151f7c75003f4c697374696e673a20416374697665206d61726b6574706c616365206c697374696e6720776974682066756c6c2064657461696c7320617661696c61626c65",
      "defined_out": [
        "0x151f7c75003f4c697374696e673a20416374697665206d61726b6574706c616365206c697374696e6720776974682066756c6c2064657461696c7320617661696c61626c65"
      ],
      "stack_out": [
        "0x151f7c75003f4c697374696e673a20416374697665206d61726b6574706c616365206c697374696e6720776974682066756c6c2064657461696c7320617661696c61626c65"
      ]
    },
    "779": {
      "op": "log",
      "stack_out": []
    },
    "780": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "781": {
      "op": "return",
      "stack_out": []
    },
    "782": {
      "block": "main_atomicCrossBorderPurchase_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "784": {
      "op": "!",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "785": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "786": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "788": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "789": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%14#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%14#0"
      ]
    },
    "792": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "793": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%15#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "reinterpret_bytes[8]%15#0"
      ]
    },
    "796": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0"
      ]
    },
    "797": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%16#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0",
        "reinterpret_bytes[8]%16#0"
      ]
    },
    "800": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "801": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%17#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "reinterpret_bytes[8]%17#0"
      ]
    },
    "804": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "805": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[8]%18#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0",
        "reinterpret_bytes[8]%18#0"
      ]
    },
    "808": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0",
        "tmp%42#0"
      ]
    },
    "809": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[8]%19#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0",
        "tmp%42#0",
        "reinterpret_bytes[8]%19#0"
      ]
    },
    "812": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0",
        "tmp%42#0",
        "tmp%43#0"
      ]
    },
    "813": {
      "callsub": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.atomicCrossBorderPurchase",
      "op": "callsub atomicCrossBorderPurchase",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "816": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "817": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "818": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "819": {
      "op": "concat",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "820": {
      "op": "log",
      "stack_out": []
    },
    "821": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "822": {
      "op": "return",
      "stack_out": []
    },
    "823": {
      "block": "main_atomicPurchase_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "825": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "826": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "827": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "829": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "830": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%10#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "833": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "834": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%11#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "837": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "838": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%12#0",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "841": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "842": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%13#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "845": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0"
      ]
    },
    "846": {
      "callsub": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.atomicPurchase",
      "op": "callsub atomicPurchase",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "849": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "850": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "851": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "852": {
      "op": "concat",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "853": {
      "op": "log",
      "stack_out": []
    },
    "854": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "855": {
      "op": "return",
      "stack_out": []
    },
    "856": {
      "block": "main_createListing_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "858": {
      "op": "!",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "859": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "860": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "862": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "863": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "866": {
      "op": "btoi",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "867": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%5#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "870": {
      "op": "btoi",
      "defined_out": [
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "871": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%6#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0",
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "874": {
      "op": "btoi",
      "defined_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "875": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%7#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "878": {
      "op": "btoi",
      "defined_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "879": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[8]%8#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "882": {
      "op": "btoi",
      "defined_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "883": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[8]%9#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "886": {
      "op": "btoi",
      "defined_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "887": {
      "callsub": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.createListing",
      "op": "callsub createListing",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "890": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "891": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "892": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "893": {
      "op": "concat",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "894": {
      "op": "log",
      "stack_out": []
    },
    "895": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "896": {
      "op": "return",
      "stack_out": []
    },
    "897": {
      "block": "main_initializeMarketplace_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "899": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "900": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "901": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "903": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "904": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "907": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "910": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "913": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "914": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "917": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "918": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "921": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "922": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[8]%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "925": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "926": {
      "callsub": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.initializeMarketplace",
      "op": "callsub initializeMarketplace",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "929": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "930": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "931": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "932": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "935": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "936": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "937": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "938": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "939": {
      "op": "concat",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "940": {
      "op": "log",
      "stack_out": []
    },
    "941": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "942": {
      "op": "return",
      "stack_out": []
    },
    "943": {
      "block": "main_bare_routing@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "945": {
      "op": "bnz main_after_if_else@22",
      "stack_out": []
    },
    "948": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "950": {
      "op": "!",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "951": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "952": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "953": {
      "op": "return",
      "stack_out": []
    },
    "954": {
      "subroutine": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.initializeMarketplace",
      "params": {
        "adminAddress#0": "bytes",
        "blContractId#0": "uint64",
        "marketplaceFeeRate#0": "uint64",
        "usdcAssetId#0": "uint64",
        "usdtAssetId#0": "uint64"
      },
      "block": "initializeMarketplace",
      "stack_in": [],
      "op": "proto 5 1"
    },
    "957": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "958": {
      "op": "bytec_1 // \"listingCounter\"",
      "defined_out": [
        "\"listingCounter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"listingCounter\""
      ]
    },
    "959": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "960": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "962": {
      "op": "bnz initializeMarketplace_after_if_else@2",
      "stack_out": []
    },
    "965": {
      "op": "bytec_1 // \"listingCounter\"",
      "stack_out": [
        "\"listingCounter\""
      ]
    },
    "966": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"listingCounter\"",
        "0"
      ]
    },
    "967": {
      "op": "app_global_put",
      "stack_out": []
    },
    "968": {
      "block": "initializeMarketplace_after_if_else@2",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "969": {
      "op": "bytec_2 // \"settlementCounter\"",
      "defined_out": [
        "\"settlementCounter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"settlementCounter\""
      ]
    },
    "970": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "971": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "973": {
      "op": "bnz initializeMarketplace_after_if_else@4",
      "stack_out": []
    },
    "976": {
      "op": "bytec_2 // \"settlementCounter\"",
      "stack_out": [
        "\"settlementCounter\""
      ]
    },
    "977": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"settlementCounter\"",
        "0"
      ]
    },
    "978": {
      "op": "app_global_put",
      "stack_out": []
    },
    "979": {
      "block": "initializeMarketplace_after_if_else@4",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "980": {
      "op": "bytec 4 // \"totalListings\"",
      "defined_out": [
        "\"totalListings\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"totalListings\""
      ]
    },
    "982": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "983": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%2#0"
      ]
    },
    "985": {
      "op": "bnz initializeMarketplace_after_if_else@6",
      "stack_out": []
    },
    "988": {
      "op": "bytec 4 // \"totalListings\"",
      "stack_out": [
        "\"totalListings\""
      ]
    },
    "990": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"totalListings\"",
        "0"
      ]
    },
    "991": {
      "op": "app_global_put",
      "stack_out": []
    },
    "992": {
      "block": "initializeMarketplace_after_if_else@6",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "993": {
      "op": "bytec 5 // \"totalVolume\"",
      "defined_out": [
        "\"totalVolume\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"totalVolume\""
      ]
    },
    "995": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "996": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%3#0"
      ]
    },
    "998": {
      "op": "bnz initializeMarketplace_after_if_else@8",
      "stack_out": []
    },
    "1001": {
      "op": "bytec 5 // \"totalVolume\"",
      "stack_out": [
        "\"totalVolume\""
      ]
    },
    "1003": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"totalVolume\"",
        "0"
      ]
    },
    "1004": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1005": {
      "block": "initializeMarketplace_after_if_else@8",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1006": {
      "op": "bytec 6 // \"totalFeesCollected\"",
      "defined_out": [
        "\"totalFeesCollected\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"totalFeesCollected\""
      ]
    },
    "1008": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1009": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%4#0"
      ]
    },
    "1011": {
      "op": "bnz initializeMarketplace_after_if_else@10",
      "stack_out": []
    },
    "1014": {
      "op": "bytec 6 // \"totalFeesCollected\"",
      "stack_out": [
        "\"totalFeesCollected\""
      ]
    },
    "1016": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"totalFeesCollected\"",
        "0"
      ]
    },
    "1017": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1018": {
      "block": "initializeMarketplace_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1019": {
      "op": "bytec 7 // \"marketplaceFeeRate\"",
      "defined_out": [
        "\"marketplaceFeeRate\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"marketplaceFeeRate\""
      ]
    },
    "1021": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1022": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%5#0"
      ]
    },
    "1024": {
      "op": "bnz initializeMarketplace_after_if_else@12",
      "stack_out": []
    },
    "1027": {
      "op": "bytec 7 // \"marketplaceFeeRate\"",
      "stack_out": [
        "\"marketplaceFeeRate\""
      ]
    },
    "1029": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"marketplaceFeeRate\"",
        "marketplaceFeeRate#0 (copy)"
      ],
      "stack_out": [
        "\"marketplaceFeeRate\"",
        "marketplaceFeeRate#0 (copy)"
      ]
    },
    "1031": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1032": {
      "block": "initializeMarketplace_after_if_else@12",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1033": {
      "op": "bytec 8 // \"blContractId\"",
      "defined_out": [
        "\"blContractId\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"blContractId\""
      ]
    },
    "1035": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1036": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%6#0"
      ]
    },
    "1038": {
      "op": "bnz initializeMarketplace_after_if_else@14",
      "stack_out": []
    },
    "1041": {
      "op": "bytec 8 // \"blContractId\"",
      "stack_out": [
        "\"blContractId\""
      ]
    },
    "1043": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"blContractId\"",
        "blContractId#0 (copy)"
      ],
      "stack_out": [
        "\"blContractId\"",
        "blContractId#0 (copy)"
      ]
    },
    "1045": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1046": {
      "block": "initializeMarketplace_after_if_else@14",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1047": {
      "op": "bytec 9 // \"usdcAssetId\"",
      "defined_out": [
        "\"usdcAssetId\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"usdcAssetId\""
      ]
    },
    "1049": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1050": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%7#0"
      ]
    },
    "1052": {
      "op": "bnz initializeMarketplace_after_if_else@16",
      "stack_out": []
    },
    "1055": {
      "op": "bytec 9 // \"usdcAssetId\"",
      "stack_out": [
        "\"usdcAssetId\""
      ]
    },
    "1057": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"usdcAssetId\"",
        "usdcAssetId#0 (copy)"
      ],
      "stack_out": [
        "\"usdcAssetId\"",
        "usdcAssetId#0 (copy)"
      ]
    },
    "1059": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1060": {
      "block": "initializeMarketplace_after_if_else@16",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1061": {
      "op": "bytec 10 // \"usdtAssetId\"",
      "defined_out": [
        "\"usdtAssetId\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"usdtAssetId\""
      ]
    },
    "1063": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1064": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%8#0"
      ]
    },
    "1066": {
      "op": "bnz initializeMarketplace_after_if_else@18",
      "stack_out": []
    },
    "1069": {
      "op": "bytec 10 // \"usdtAssetId\"",
      "stack_out": [
        "\"usdtAssetId\""
      ]
    },
    "1071": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"usdtAssetId\"",
        "usdtAssetId#0 (copy)"
      ],
      "stack_out": [
        "\"usdtAssetId\"",
        "usdtAssetId#0 (copy)"
      ]
    },
    "1073": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1074": {
      "block": "initializeMarketplace_after_if_else@18",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1075": {
      "op": "bytec_0 // \"emergencyPause\"",
      "defined_out": [
        "\"emergencyPause\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"emergencyPause\""
      ]
    },
    "1076": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1077": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%9#0"
      ]
    },
    "1079": {
      "op": "bnz initializeMarketplace_after_if_else@20",
      "stack_out": []
    },
    "1082": {
      "op": "bytec_0 // \"emergencyPause\"",
      "stack_out": [
        "\"emergencyPause\""
      ]
    },
    "1083": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"emergencyPause\"",
        "0"
      ]
    },
    "1084": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1085": {
      "block": "initializeMarketplace_after_if_else@20",
      "stack_in": [],
      "op": "pushbytes \"Atomic Marketplace V2 initialized with admin and fee configuration\"",
      "defined_out": [
        "\"Atomic Marketplace V2 initialized with admin and fee configuration\""
      ],
      "stack_out": [
        "\"Atomic Marketplace V2 initialized with admin and fee configuration\""
      ]
    },
    "1153": {
      "retsub": true,
      "op": "retsub"
    },
    "1154": {
      "subroutine": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.createListing",
      "params": {
        "blId#0": "uint64",
        "pricePerShare#0": "uint64",
        "totalShares#0": "uint64",
        "minPurchase#0": "uint64",
        "maxPurchase#0": "uint64",
        "paymentMethods#0": "uint64"
      },
      "block": "createListing",
      "stack_in": [],
      "op": "proto 6 1"
    },
    "1157": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1158": {
      "op": "bytec_1 // \"listingCounter\"",
      "defined_out": [
        "\"listingCounter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"listingCounter\""
      ]
    },
    "1159": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1160": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1162": {
      "op": "bnz createListing_after_if_else@2",
      "stack_out": []
    },
    "1165": {
      "op": "bytec_1 // \"listingCounter\"",
      "stack_out": [
        "\"listingCounter\""
      ]
    },
    "1166": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"listingCounter\"",
        "0"
      ]
    },
    "1167": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1168": {
      "block": "createListing_after_if_else@2",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1169": {
      "op": "bytec 4 // \"totalListings\"",
      "defined_out": [
        "\"totalListings\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"totalListings\""
      ]
    },
    "1171": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1172": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1174": {
      "op": "bnz createListing_after_if_else@4",
      "stack_out": []
    },
    "1177": {
      "op": "bytec 4 // \"totalListings\"",
      "stack_out": [
        "\"totalListings\""
      ]
    },
    "1179": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"totalListings\"",
        "0"
      ]
    },
    "1180": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1181": {
      "block": "createListing_after_if_else@4",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1182": {
      "op": "bytec_1 // \"listingCounter\"",
      "defined_out": [
        "\"listingCounter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"listingCounter\""
      ]
    },
    "1183": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1184": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1185": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "1"
      ]
    },
    "1186": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "1187": {
      "op": "bytec_1 // \"listingCounter\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"listingCounter\""
      ]
    },
    "1188": {
      "op": "swap",
      "stack_out": [
        "\"listingCounter\"",
        "new_state_value%0#0"
      ]
    },
    "1189": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1190": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1191": {
      "op": "bytec_1 // \"listingCounter\"",
      "stack_out": [
        "0",
        "\"listingCounter\""
      ]
    },
    "1192": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "newListingId#0"
      ],
      "stack_out": [
        "newListingId#0",
        "maybe_exists%3#0"
      ]
    },
    "1193": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "newListingId#0"
      ]
    },
    "1194": {
      "op": "intc_0 // 0",
      "stack_out": [
        "newListingId#0",
        "0"
      ]
    },
    "1195": {
      "op": "bytec 4 // \"totalListings\"",
      "defined_out": [
        "\"totalListings\"",
        "0",
        "newListingId#0"
      ],
      "stack_out": [
        "newListingId#0",
        "0",
        "\"totalListings\""
      ]
    },
    "1197": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "newListingId#0"
      ],
      "stack_out": [
        "newListingId#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1198": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "newListingId#0",
        "maybe_value%4#0"
      ]
    },
    "1199": {
      "op": "intc_1 // 1",
      "stack_out": [
        "newListingId#0",
        "maybe_value%4#0",
        "1"
      ]
    },
    "1200": {
      "op": "+",
      "defined_out": [
        "newListingId#0",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "newListingId#0",
        "new_state_value%1#0"
      ]
    },
    "1201": {
      "op": "bytec 4 // \"totalListings\"",
      "stack_out": [
        "newListingId#0",
        "new_state_value%1#0",
        "\"totalListings\""
      ]
    },
    "1203": {
      "op": "swap",
      "stack_out": [
        "newListingId#0",
        "\"totalListings\"",
        "new_state_value%1#0"
      ]
    },
    "1204": {
      "op": "app_global_put",
      "stack_out": [
        "newListingId#0"
      ]
    },
    "1205": {
      "retsub": true,
      "op": "retsub"
    },
    "1206": {
      "subroutine": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.atomicPurchase",
      "params": {
        "listingId#0": "uint64",
        "sharesPurchased#0": "uint64",
        "paymentMethod#0": "uint64",
        "maxSlippage#0": "uint64"
      },
      "block": "atomicPurchase",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "1209": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1210": {
      "op": "bytec_2 // \"settlementCounter\"",
      "defined_out": [
        "\"settlementCounter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"settlementCounter\""
      ]
    },
    "1211": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1212": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1214": {
      "op": "bnz atomicPurchase_after_if_else@2",
      "stack_out": []
    },
    "1217": {
      "op": "bytec_2 // \"settlementCounter\"",
      "stack_out": [
        "\"settlementCounter\""
      ]
    },
    "1218": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"settlementCounter\"",
        "0"
      ]
    },
    "1219": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1220": {
      "block": "atomicPurchase_after_if_else@2",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1221": {
      "op": "bytec 5 // \"totalVolume\"",
      "defined_out": [
        "\"totalVolume\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"totalVolume\""
      ]
    },
    "1223": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1224": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1226": {
      "op": "bnz atomicPurchase_after_if_else@4",
      "stack_out": []
    },
    "1229": {
      "op": "bytec 5 // \"totalVolume\"",
      "stack_out": [
        "\"totalVolume\""
      ]
    },
    "1231": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"totalVolume\"",
        "0"
      ]
    },
    "1232": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1233": {
      "block": "atomicPurchase_after_if_else@4",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1234": {
      "op": "bytec 6 // \"totalFeesCollected\"",
      "defined_out": [
        "\"totalFeesCollected\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"totalFeesCollected\""
      ]
    },
    "1236": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1237": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%2#0"
      ]
    },
    "1239": {
      "op": "bnz atomicPurchase_after_if_else@6",
      "stack_out": []
    },
    "1242": {
      "op": "bytec 6 // \"totalFeesCollected\"",
      "stack_out": [
        "\"totalFeesCollected\""
      ]
    },
    "1244": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"totalFeesCollected\"",
        "0"
      ]
    },
    "1245": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1246": {
      "block": "atomicPurchase_after_if_else@6",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1247": {
      "op": "bytec 7 // \"marketplaceFeeRate\"",
      "defined_out": [
        "\"marketplaceFeeRate\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"marketplaceFeeRate\""
      ]
    },
    "1249": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1250": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%3#0"
      ]
    },
    "1252": {
      "op": "bnz atomicPurchase_after_if_else@8",
      "stack_out": []
    },
    "1255": {
      "op": "bytec 7 // \"marketplaceFeeRate\"",
      "stack_out": [
        "\"marketplaceFeeRate\""
      ]
    },
    "1257": {
      "op": "intc_2 // 100",
      "defined_out": [
        "\"marketplaceFeeRate\"",
        "100"
      ],
      "stack_out": [
        "\"marketplaceFeeRate\"",
        "100"
      ]
    },
    "1258": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1259": {
      "block": "atomicPurchase_after_if_else@8",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1260": {
      "op": "bytec_2 // \"settlementCounter\"",
      "defined_out": [
        "\"settlementCounter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"settlementCounter\""
      ]
    },
    "1261": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1262": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%4#0"
      ]
    },
    "1263": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "1"
      ]
    },
    "1264": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "1265": {
      "op": "bytec_2 // \"settlementCounter\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"settlementCounter\""
      ]
    },
    "1266": {
      "op": "swap",
      "stack_out": [
        "\"settlementCounter\"",
        "new_state_value%0#0"
      ]
    },
    "1267": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1268": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1269": {
      "op": "bytec_2 // \"settlementCounter\"",
      "stack_out": [
        "0",
        "\"settlementCounter\""
      ]
    },
    "1270": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "settlementId#0"
      ],
      "stack_out": [
        "settlementId#0",
        "maybe_exists%5#0"
      ]
    },
    "1271": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "settlementId#0"
      ]
    },
    "1272": {
      "op": "frame_dig -3",
      "defined_out": [
        "settlementId#0",
        "sharesPurchased#0 (copy)"
      ],
      "stack_out": [
        "settlementId#0",
        "sharesPurchased#0 (copy)"
      ]
    },
    "1274": {
      "op": "pushint 2000000 // 2000000",
      "defined_out": [
        "2000000",
        "settlementId#0",
        "sharesPurchased#0 (copy)"
      ],
      "stack_out": [
        "settlementId#0",
        "sharesPurchased#0 (copy)",
        "2000000"
      ]
    },
    "1278": {
      "op": "*",
      "defined_out": [
        "settlementId#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "settlementId#0",
        "totalPrice#0"
      ]
    },
    "1279": {
      "op": "dup",
      "defined_out": [
        "settlementId#0",
        "totalPrice#0",
        "totalPrice#0 (copy)"
      ],
      "stack_out": [
        "settlementId#0",
        "totalPrice#0",
        "totalPrice#0 (copy)"
      ]
    },
    "1280": {
      "op": "intc_2 // 100",
      "defined_out": [
        "100",
        "settlementId#0",
        "totalPrice#0",
        "totalPrice#0 (copy)"
      ],
      "stack_out": [
        "settlementId#0",
        "totalPrice#0",
        "totalPrice#0 (copy)",
        "100"
      ]
    },
    "1281": {
      "op": "/",
      "defined_out": [
        "feeAmount#0",
        "settlementId#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "settlementId#0",
        "totalPrice#0",
        "feeAmount#0"
      ]
    },
    "1282": {
      "op": "intc_0 // 0",
      "stack_out": [
        "settlementId#0",
        "totalPrice#0",
        "feeAmount#0",
        "0"
      ]
    },
    "1283": {
      "op": "bytec 5 // \"totalVolume\"",
      "defined_out": [
        "\"totalVolume\"",
        "0",
        "feeAmount#0",
        "settlementId#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "settlementId#0",
        "totalPrice#0",
        "feeAmount#0",
        "0",
        "\"totalVolume\""
      ]
    },
    "1285": {
      "op": "app_global_get_ex",
      "defined_out": [
        "feeAmount#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "settlementId#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "settlementId#0",
        "totalPrice#0",
        "feeAmount#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1286": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "settlementId#0",
        "totalPrice#0",
        "feeAmount#0",
        "maybe_value%6#0"
      ]
    },
    "1287": {
      "op": "uncover 2",
      "stack_out": [
        "settlementId#0",
        "feeAmount#0",
        "maybe_value%6#0",
        "totalPrice#0"
      ]
    },
    "1289": {
      "op": "+",
      "defined_out": [
        "feeAmount#0",
        "new_state_value%1#0",
        "settlementId#0"
      ],
      "stack_out": [
        "settlementId#0",
        "feeAmount#0",
        "new_state_value%1#0"
      ]
    },
    "1290": {
      "op": "bytec 5 // \"totalVolume\"",
      "stack_out": [
        "settlementId#0",
        "feeAmount#0",
        "new_state_value%1#0",
        "\"totalVolume\""
      ]
    },
    "1292": {
      "op": "swap",
      "stack_out": [
        "settlementId#0",
        "feeAmount#0",
        "\"totalVolume\"",
        "new_state_value%1#0"
      ]
    },
    "1293": {
      "op": "app_global_put",
      "stack_out": [
        "settlementId#0",
        "feeAmount#0"
      ]
    },
    "1294": {
      "op": "intc_0 // 0",
      "stack_out": [
        "settlementId#0",
        "feeAmount#0",
        "0"
      ]
    },
    "1295": {
      "op": "bytec 6 // \"totalFeesCollected\"",
      "defined_out": [
        "\"totalFeesCollected\"",
        "0",
        "feeAmount#0",
        "settlementId#0"
      ],
      "stack_out": [
        "settlementId#0",
        "feeAmount#0",
        "0",
        "\"totalFeesCollected\""
      ]
    },
    "1297": {
      "op": "app_global_get_ex",
      "defined_out": [
        "feeAmount#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "settlementId#0"
      ],
      "stack_out": [
        "settlementId#0",
        "feeAmount#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1298": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "settlementId#0",
        "feeAmount#0",
        "maybe_value%7#0"
      ]
    },
    "1299": {
      "op": "+",
      "defined_out": [
        "new_state_value%2#0",
        "settlementId#0"
      ],
      "stack_out": [
        "settlementId#0",
        "new_state_value%2#0"
      ]
    },
    "1300": {
      "op": "bytec 6 // \"totalFeesCollected\"",
      "stack_out": [
        "settlementId#0",
        "new_state_value%2#0",
        "\"totalFeesCollected\""
      ]
    },
    "1302": {
      "op": "swap",
      "stack_out": [
        "settlementId#0",
        "\"totalFeesCollected\"",
        "new_state_value%2#0"
      ]
    },
    "1303": {
      "op": "app_global_put",
      "stack_out": [
        "settlementId#0"
      ]
    },
    "1304": {
      "retsub": true,
      "op": "retsub"
    },
    "1305": {
      "subroutine": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.atomicCrossBorderPurchase",
      "params": {
        "listingId#0": "uint64",
        "sharesPurchased#0": "uint64",
        "fromCurrency#0": "uint64",
        "toCurrency#0": "uint64",
        "exchangeRate#0": "uint64",
        "maxSlippage#0": "uint64"
      },
      "block": "atomicCrossBorderPurchase",
      "stack_in": [],
      "op": "proto 6 1"
    },
    "1308": {
      "op": "frame_dig -6",
      "defined_out": [
        "listingId#0 (copy)"
      ],
      "stack_out": [
        "listingId#0 (copy)"
      ]
    },
    "1310": {
      "op": "frame_dig -5",
      "defined_out": [
        "listingId#0 (copy)",
        "sharesPurchased#0 (copy)"
      ],
      "stack_out": [
        "listingId#0 (copy)",
        "sharesPurchased#0 (copy)"
      ]
    },
    "1312": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "listingId#0 (copy)",
        "sharesPurchased#0 (copy)"
      ],
      "stack_out": [
        "listingId#0 (copy)",
        "sharesPurchased#0 (copy)",
        "2"
      ]
    },
    "1314": {
      "op": "frame_dig -1",
      "defined_out": [
        "2",
        "listingId#0 (copy)",
        "maxSlippage#0 (copy)",
        "sharesPurchased#0 (copy)"
      ],
      "stack_out": [
        "listingId#0 (copy)",
        "sharesPurchased#0 (copy)",
        "2",
        "maxSlippage#0 (copy)"
      ]
    },
    "1316": {
      "callsub": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.atomicPurchase",
      "op": "callsub atomicPurchase",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1319": {
      "retsub": true,
      "op": "retsub"
    },
    "1320": {
      "subroutine": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.emergencyPauseMarketplace",
      "params": {},
      "block": "emergencyPauseMarketplace",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1321": {
      "op": "bytec_0 // \"emergencyPause\"",
      "defined_out": [
        "\"emergencyPause\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"emergencyPause\""
      ]
    },
    "1322": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1323": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1325": {
      "op": "bnz emergencyPauseMarketplace_after_if_else@2",
      "stack_out": []
    },
    "1328": {
      "op": "bytec_0 // \"emergencyPause\"",
      "stack_out": [
        "\"emergencyPause\""
      ]
    },
    "1329": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"emergencyPause\"",
        "0"
      ]
    },
    "1330": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1331": {
      "block": "emergencyPauseMarketplace_after_if_else@2",
      "stack_in": [],
      "op": "bytec_0 // \"emergencyPause\"",
      "defined_out": [
        "\"emergencyPause\""
      ],
      "stack_out": [
        "\"emergencyPause\""
      ]
    },
    "1332": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"emergencyPause\"",
        "1"
      ],
      "stack_out": [
        "\"emergencyPause\"",
        "1"
      ]
    },
    "1333": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1334": {
      "op": "pushbytes \"Marketplace paused for emergency\"",
      "defined_out": [
        "\"Marketplace paused for emergency\""
      ],
      "stack_out": [
        "\"Marketplace paused for emergency\""
      ]
    },
    "1368": {
      "retsub": true,
      "op": "retsub"
    },
    "1369": {
      "subroutine": "smart_contracts/atomic_marketplace_v2/contract.algo.ts::AtomicMarketplaceV2.resumeMarketplace",
      "params": {},
      "block": "resumeMarketplace",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1370": {
      "op": "bytec_0 // \"emergencyPause\"",
      "defined_out": [
        "\"emergencyPause\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"emergencyPause\""
      ]
    },
    "1371": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1372": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1374": {
      "op": "bnz resumeMarketplace_after_if_else@2",
      "stack_out": []
    },
    "1377": {
      "op": "bytec_0 // \"emergencyPause\"",
      "stack_out": [
        "\"emergencyPause\""
      ]
    },
    "1378": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"emergencyPause\"",
        "0"
      ]
    },
    "1379": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1380": {
      "block": "resumeMarketplace_after_if_else@2",
      "stack_in": [],
      "op": "bytec_0 // \"emergencyPause\"",
      "defined_out": [
        "\"emergencyPause\""
      ],
      "stack_out": [
        "\"emergencyPause\""
      ]
    },
    "1381": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"emergencyPause\"",
        "0"
      ],
      "stack_out": [
        "\"emergencyPause\"",
        "0"
      ]
    },
    "1382": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1383": {
      "op": "pushbytes \"Marketplace operations resumed\"",
      "defined_out": [
        "\"Marketplace operations resumed\""
      ],
      "stack_out": [
        "\"Marketplace operations resumed\""
      ]
    },
    "1415": {
      "retsub": true,
      "op": "retsub"
    }
  }
}