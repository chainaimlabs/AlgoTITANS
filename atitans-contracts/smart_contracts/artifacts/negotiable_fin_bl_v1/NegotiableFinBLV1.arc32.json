{
    "hints": {
        "hello(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "createFinancialBL(string,uint64,uint64,uint64,uint64,uint64,string,string,string,string,string,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "getBLFinancialInfo(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verifyCompliance(string,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "tokenizeForTrading(string,uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "calculateYield(string,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "getCounters()string": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 2
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "blCounter": {
                    "type": "uint64",
                    "key": "blCounter"
                },
                "totalValueLocked": {
                    "type": "uint64",
                    "key": "totalValueLocked"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "NegotiableFinBLV1",
        "methods": [
            {
                "name": "hello",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                },
                "desc": "Test method like HelloWorld"
            },
            {
                "name": "createFinancialBL",
                "args": [
                    {
                        "type": "string",
                        "name": "description"
                    },
                    {
                        "type": "uint64",
                        "name": "cargoValue"
                    },
                    {
                        "type": "uint64",
                        "name": "blType"
                    },
                    {
                        "type": "uint64",
                        "name": "creditRating"
                    },
                    {
                        "type": "uint64",
                        "name": "riskScore"
                    },
                    {
                        "type": "uint64",
                        "name": "yieldRate"
                    },
                    {
                        "type": "string",
                        "name": "vleiID"
                    },
                    {
                        "type": "string",
                        "name": "jurisdictionCode"
                    },
                    {
                        "type": "string",
                        "name": "complianceHash"
                    },
                    {
                        "type": "string",
                        "name": "incoterms"
                    },
                    {
                        "type": "string",
                        "name": "insurancePolicyID"
                    },
                    {
                        "type": "string",
                        "name": "lcrReference"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                },
                "desc": "Create Financial BL (simplified)"
            },
            {
                "name": "getBLFinancialInfo",
                "args": [
                    {
                        "type": "string",
                        "name": "blId"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                },
                "desc": "Get BL financial info (simplified)"
            },
            {
                "name": "verifyCompliance",
                "args": [
                    {
                        "type": "string",
                        "name": "blId"
                    },
                    {
                        "type": "string",
                        "name": "regulatoryHash"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                },
                "desc": "Verify compliance (simplified)"
            },
            {
                "name": "tokenizeForTrading",
                "args": [
                    {
                        "type": "string",
                        "name": "blId"
                    },
                    {
                        "type": "uint64",
                        "name": "fractionalShares"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                },
                "desc": "Tokenize for trading (simplified)"
            },
            {
                "name": "calculateYield",
                "args": [
                    {
                        "type": "string",
                        "name": "blId"
                    },
                    {
                        "type": "uint64",
                        "name": "investmentAmount"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                },
                "desc": "Calculate yield (simplified)"
            },
            {
                "name": "getCounters",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "string"
                },
                "desc": "Get counter values"
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}