/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'

export const APP_SPEC: Arc56Contract = {"name":"SimpleCollateralLending","structs":{"ActiveLoan":[{"name":"loanId","type":"uint64"},{"name":"borrower","type":"address"},{"name":"lender","type":"address"},{"name":"collateralAssetId","type":"uint64"},{"name":"principalAmount","type":"uint64"},{"name":"interestRateBps","type":"uint64"},{"name":"repaymentAmount","type":"uint64"},{"name":"dueDate","type":"uint64"},{"name":"fundedTime","type":"uint64"},{"name":"isRepaid","type":"bool"},{"name":"isLiquidated","type":"bool"}],"LoanRequest":[{"name":"loanId","type":"uint64"},{"name":"borrower","type":"address"},{"name":"collateralAssetId","type":"uint64"},{"name":"collateralValue","type":"uint64"},{"name":"requestedAmount","type":"uint64"},{"name":"interestRateBps","type":"uint64"},{"name":"loanDurationDays","type":"uint64"},{"name":"requestTime","type":"uint64"},{"name":"isActive","type":"bool"},{"name":"isFunded","type":"bool"}]},"methods":[{"name":"initialize","args":[{"type":"uint64","name":"usdcAssetId"},{"type":"uint64","name":"registryContractId"}],"returns":{"type":"bool"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"desc":"Initialize lending contract","events":[],"recommendations":{}},{"name":"requestLoan","args":[{"type":"uint64","name":"collateralAssetId"},{"type":"uint64","name":"collateralValue"},{"type":"uint64","name":"requestedAmount"},{"type":"uint64","name":"loanDurationDays"},{"type":"axfer","name":"collateralTransfer"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"desc":"Create loan request (borrower pledges eBL as collateral)\nNow includes risk-based LTV and interest rate calculation","events":[],"recommendations":{}},{"name":"fundLoan","args":[{"type":"uint64","name":"loanId"},{"type":"axfer","name":"usdcPayment"}],"returns":{"type":"bool"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"desc":"Fund loan request (lender provides USDC)","events":[],"recommendations":{}},{"name":"repayLoan","args":[{"type":"uint64","name":"loanId"},{"type":"axfer","name":"repayment"}],"returns":{"type":"bool"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"desc":"Repay loan (borrower repays USDC + interest)","events":[],"recommendations":{}},{"name":"liquidateLoan","args":[{"type":"uint64","name":"loanId"}],"returns":{"type":"bool"},"actions":{"create":[],"call":["NoOp"]},"readonly":false,"desc":"Liquidate loan (lender claims collateral if overdue)","events":[],"recommendations":{}},{"name":"getLoanRequest","args":[{"type":"uint64","name":"loanId"}],"returns":{"type":"(uint64,address,uint64,uint64,uint64,uint64,uint64,uint64,bool,bool)","struct":"LoanRequest"},"actions":{"create":[],"call":["NoOp"]},"readonly":true,"desc":"Get loan request details","events":[],"recommendations":{}},{"name":"getActiveLoan","args":[{"type":"uint64","name":"loanId"}],"returns":{"type":"(uint64,address,address,uint64,uint64,uint64,uint64,uint64,uint64,bool,bool)","struct":"ActiveLoan"},"actions":{"create":[],"call":["NoOp"]},"readonly":true,"desc":"Get active loan details","events":[],"recommendations":{}},{"name":"getBorrowerLoans","args":[{"type":"address","name":"borrower"}],"returns":{"type":"uint64[]"},"actions":{"create":[],"call":["NoOp"]},"readonly":true,"desc":"Get borrower's loans","events":[],"recommendations":{}},{"name":"getLenderLoans","args":[{"type":"address","name":"lender"}],"returns":{"type":"uint64[]"},"actions":{"create":[],"call":["NoOp"]},"readonly":true,"desc":"Get lender's loans","events":[],"recommendations":{}},{"name":"getRiskBasedLoanTerms","args":[{"type":"uint64","name":"collateralValue"},{"type":"uint64","name":"riskScore"}],"returns":{"type":"(uint64,uint64,uint64)"},"actions":{"create":[],"call":["NoOp"]},"readonly":true,"desc":"Get risk-based loan terms for a collateral asset (read-only)","events":[],"recommendations":{}},{"name":"getLendingStats","args":[],"returns":{"type":"(uint64,uint64,uint64)"},"actions":{"create":[],"call":["NoOp"]},"readonly":true,"desc":"Get lending statistics","events":[],"recommendations":{}}],"arcs":[22,28],"networks":{},"state":{"schema":{"global":{"ints":6,"bytes":0},"local":{"ints":0,"bytes":0}},"keys":{"global":{"nextLoanId":{"keyType":"AVMString","valueType":"AVMUint64","key":"bmV4dExvYW5JZA==","desc":"Global state"},"totalLoansIssued":{"keyType":"AVMString","valueType":"AVMUint64","key":"dG90YWxMb2Fuc0lzc3VlZA=="},"totalVolumeUSDC":{"keyType":"AVMString","valueType":"AVMUint64","key":"dG90YWxWb2x1bWVVU0RD"},"defaultLiquidationRatio":{"keyType":"AVMString","valueType":"AVMUint64","key":"ZGVmYXVsdExpcXVpZGF0aW9uUmF0aW8="},"usdcAssetId":{"keyType":"AVMString","valueType":"AVMUint64","key":"dXNkY0Fzc2V0SWQ="},"registryContractId":{"keyType":"AVMString","valueType":"AVMUint64","key":"cmVnaXN0cnlDb250cmFjdElk"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"loanRequests":{"keyType":"uint64","valueType":"LoanRequest","desc":"Storage maps","prefix":"cmVxdWVzdHM="},"activeLoans":{"keyType":"uint64","valueType":"ActiveLoan","prefix":"bG9hbnM="},"borrowerLoans":{"keyType":"address","valueType":"uint64[]","prefix":"Ym9ycm93ZXI="},"lenderLoans":{"keyType":"address","valueType":"uint64[]","prefix":"bGVuZGVy"}}}},"bareActions":{"create":["NoOp"],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"pc":[1272,1492,1674],"errorMessage":"Active loan not found"},{"pc":[950],"errorMessage":"Already funded"},{"pc":[1303,1524],"errorMessage":"Already liquidated"},{"pc":[1289,1510],"errorMessage":"Already repaid"},{"pc":[851,920,1188,1275,1495,1658,1676,1696,1721],"errorMessage":"Box must have value"},{"pc":[709],"errorMessage":"Collateral asset mismatch"},{"pc":[725],"errorMessage":"Collateral sender mismatch"},{"pc":[984],"errorMessage":"Incorrect funding amount"},{"pc":[1344],"errorMessage":"Incorrect repayment amount"},{"pc":[968,1003,1016,1056,1080,1132,1137,1142,1306,1331,1369,1392,1418,1423,1428,1433,1438,1527,1539,1554,1580,1585,1590,1595,1600,1605],"errorMessage":"Index access is out of bounds"},{"pc":[757],"errorMessage":"Loan duration too long (max 1 year)"},{"pc":[1550],"errorMessage":"Loan not yet overdue"},{"pc":[917,1656],"errorMessage":"Loan request not found"},{"pc":[961],"errorMessage":"Must pay with USDC"},{"pc":[1324],"errorMessage":"Must repay with USDC"},{"pc":[717],"errorMessage":"Must transfer collateral to contract"},{"pc":[732],"errorMessage":"Must transfer entire eBL"},{"pc":[229,250,279,298,317,337,357,382,417,452,495],"errorMessage":"OnCompletion is not NoOp"},{"pc":[1313],"errorMessage":"Only borrower can repay"},{"pc":[626],"errorMessage":"Only creator can initialize"},{"pc":[1534],"errorMessage":"Only lender can liquidate"},{"pc":[1000,1360],"errorMessage":"Payment sender mismatch"},{"pc":[992,1352],"errorMessage":"Payment to wrong address"},{"pc":[936],"errorMessage":"Request inactive"},{"pc":[750],"errorMessage":"Requested amount exceeds risk-based LTV limit"},{"pc":[746],"errorMessage":"Requested amount must be positive"},{"pc":[529],"errorMessage":"can only call when creating"},{"pc":[232,253,282,301,320,340,360,385,420,455,498],"errorMessage":"can only call when not creating"},{"pc":[682,771,959,1053,1214,1224,1322,1366,1766,1772,1777],"errorMessage":"check GlobalState exists"},{"pc":[399,434,481],"errorMessage":"transaction type is axfer"}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"